{"version":3,"sources":["context/firebaseContext.js","utils/api.js","comps/barChart.js","comps/scoreDataView.js","comps/scoreView.js","comps/boxView.js","pages/boxSearch.js","comps/login.js","comps/boxListAccordion.js","comps/ownerBox.js","comps/usernamePanel.js","history.js","pages/profile.js","comps/header.js","css/apptheme.js","app.js","index.js"],"names":["firebase","FirebaseAuthContext","React","createContext","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","database","BarChart","props","state","spec","generateSpec","values","fetch","then","res","json","renderSpec","catch","err","console","error","vega","window","VEGA","View","parse","renderer","container","hover","runAsync","newProps","this","setState","log","obj","Array","from","Object","entries","entry","Map","Grid","item","xs","Paper","elevation","id","Component","withTheme","db","ScoreDataView","wodID","scores","rawScores","arr","map","score","get","scoresPath","scoreListener","ref","on","ss","exists","objListToArray","val","getRawScores","Score","info","username","ListItem","ListItemText","primary","ScoreView","wodMD","userMD","scorePath","userScore","document","getElementById","value","uid","path","set","boxID","Typography","Accordion","AccordionSummary","style","background","theme","palette","main","expandIcon","aria-label","aria-controls","AccordionDetails","TextField","type","margin","pattern","inputProps","title","placeholder","color","InputLabelProps","shrink","Button","variant","onClick","handleAddScore","bind","length","List","Card","CardContent","component","gutterBottom","handleBack","Wod","scoreType","wodText","CardActions","size","handleScoreView","BoxView","boxMD","wods","showWodList","currentWodID","currentWodMD","boxPath","wodPath","boxListener","wodListener","align","Fragment","wod","Box","itemxs","padding","handleBoxView","BoxSearch","user","allBoxes","filteredBoxes","allBoxesListener","objectsToArray","sort","x","y","toLowerCase","undefined","data","keyCode","which","ev","target","filter","box","includes","fullWidth","onKeyUp","onChange","InputProps","startAdornment","InputAdornment","position","i","key","BoxSearchPage","showBoxView","currentBoxID","Login","email","pass1","signInWithEmailAndPassword","onLogin","code","message","justify","handleSubmit","to","className","BoxListAccordion","userBoxes","hasBoxes","showBoxList","zeroMinWidth","noWrap","OwnerBox","addBoxProgress","scoreTypeSelectVal","boxIDSelectVal","boxObj","updateState","getArrayOfBoxes","newState","listenForBoxes","accountType","showAddBoxProgress","createBox","wodBoxPath","push","boxNamesTitle","once","alert","boxData","ownerUID","name","mainGrad","Select","native","createWOD","LinearProgress","createBrowserHistory","PageContent","sendEmailVerification","emailAlertOpen","Collapse","in","Alert","onClose","emailVerified","sendVerificationEmail","onLogout","ProfilePage","auth","signOut","handleLogout","handleLogIn","Header","AppBar","toolbar","Toolbar","disableGutters","apptheme","createMuiTheme","responsiveFontSizes","App","btmnav","currentUser","firebaseAuthListener","onAuthStateChanged","userMDListener","metadata","Provider","history","ThemeProvider","exact","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","label","Link","icon","contextType","ReactDOM","render"],"mappings":"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","file":"static/js/main.53535da0.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\"; \nimport React from \"react\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGE8_j8cfIBmIzcvP6CVgG2yC6EE1Ep1U\",\n  authDomain: \"wodtrackrr.firebaseapp.com\",\n  databaseURL: \"https://wodtrackrr.firebaseio.com\",\n  projectId: \"wodtrackrr\",\n  storageBucket: \"wodtrackrr.appspot.com\",\n  messagingSenderId: \"743601990099\",\n  appId: \"1:743601990099:web:5937e9151eaad13e93a726\",\n  measurementId: \"G-39CF0BRPMH\"\n};\n\n\n\nexport default firebase\nexport const FirebaseAuthContext = React.createContext(firebase.initializeApp(firebaseConfig));","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\"; \nimport \"firebase/storage\";\nimport \"firebase/database\"; \nvar storage = firebase.storage()\nvar db = firebase.database();\n\n\n\nfunction formatDate(){\n  const [{ value: month },,{ value: day },,{ value: year }] \n    = new Intl.DateTimeFormat('en', \n      { year: 'numeric', month: 'numeric', day: '2-digit' })\n      .formatToParts(new Date())  \n  console.log(new Intl.DateTimeFormat('en', \n      { year: 'numeric', month: 'numeric', day: '2-digit' }))\n  return `${year}/${month}/${day}`\n}\n\nexport default async function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n\nexport async function getImagePreview(fileObjs) {\n  return await Promise.all(fileObjs.map(fileObj => {\n    return new Promise((res, rej) => {\n      const reader = new FileReader();  \n  \n      reader.onload = (evt) => {\n        res(evt)\n      }\n      // add error event\n      reader.readAsDataURL(fileObj)\n      }) \n  }))\n  \n  \n}\n\n\nexport function postCaptionUpload(ts, caption){\n  let DBRef = db.ref(`posts/${ts}/`)\n  DBRef.child('caption')\n  .set(caption)\n  .then( () => {\n    console.log(\"Caption uploaded\")\n  })\n  .catch(err => { console.log(err) })\n}\n\nexport function postMediaUpload(fileObj, ts, i) {\n  const reader = new FileReader();  \n  console.log(fileObj, ts, i)\n  let DBRef = db.ref(`posts/${ts}/`)\n  let fileType = fileObj.type.split('/')[0]\n  reader.onload = (evt) => {\n    // Use Firebase API here to directly upload file?\n    storage.ref()\n    .child(`posts/${ts}/${fileObj.name}`)\n    .put(fileObj)\n    .then(snapshot => {\n      if(snapshot){\n        console.log(snapshot)\n        DBRef.child(`media/${i}`)\n        .update({\n          type: fileType,\n          url: snapshot.metadata.fullPath \n        })\n        .then( () => {\n          console.log('File uploaded')\n        })\n        .catch( err => { console.log(err) })\n      }\n\n    })\n    .catch(err => {console.log(err)})\n  }\n  reader.readAsDataURL(fileObj)\n}\n\nexport async function downloadPostMedia(imgPaths){\n    return await Promise.all(imgPaths.map(imgObj => {\n      console.log(imgObj.get('path'))\n      return new Promise((res, rej) => {\n        storage.ref(imgObj.get('path')).getDownloadURL()\n        .then(url => {\n          console.log(url)\n          res(new Map([['path', imgObj.get('path')], ['url', url], ['type', imgObj.get('type')] ]))\n        }).catch(err => {rej(err)})\n      })\n    }))\n}\n\n\n/* not in use */\n\nexport function websiteImageUpload(title, file) {\n  const reader = new FileReader();  \n\n  let setNameDBRef = db.ref(`website/images`)\n  \n  reader.onload = (evt) => {\n    // Use Firebase API here to directly upload file?\n    storage.ref()\n    .child(`website/images/${title}`)\n    .put(file)\n    .then(snapshot => {\n      let stripped = snapshot.metadata.fullPath\n      .replace(new RegExp(/\\//, 'g'), \"\")\n      .replace(\".\", \"\")\n      \n      // see if image object exits, preserve original upload date\n      setNameDBRef.child(stripped)\n      .once('value')\n      .then( setNameImageSnapshot => {\n          let fmtDate =  null // preserve original date\n          if(setNameImageSnapshot.val()){\n            fmtDate = setNameImageSnapshot.val().date\n          }else{\n            const date = new Date()\n            const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'numeric', day: '2-digit' }) \n            const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat.formatToParts(date )  \n            fmtDate = `${year}/${month}/${day}` \n          }\n\n          setNameDBRef.child(stripped).set({\n            \"date\": fmtDate,\n            \"path\": snapshot.metadata.fullPath \n          })\n      } )\n\n    })\n    .catch(err => {console.log(err)})\n  }\n  reader.readAsDataURL(file)\n}\n\nexport async function downloadWebsiteImages(imgPaths){\n    return await Promise.all(imgPaths.map(imgObj => {\n      \n      return new Promise((res, rej) => {\n        storage.ref(imgObj.path).getDownloadURL()\n        .then(url => {\n          res(url)\n        }).catch(err => {rej(err)})\n      })\n    }))\n}\n\n/* not in use */\n\nfunction setThumbUploadHelper(setName, title, file){\n  /*\n    Uploads the file and file data to database \n  */\n\n  //upload \n  let thumbStorageRef = storage.ref().child(`thumbnails/${setName}/${title}`);\n  let setThumbDBRef = db.ref(`thumbnails/${setName}/`)\n\n  // store file data\n  thumbStorageRef.put(file)\n  .then(snapshot => {\n    let stripped = snapshot.metadata.fullPath.replace(new RegExp(/\\//, 'g'), \"\").replace(\".\", \"\")\n    /* key: value ------ stippped: fullPath ----- pathtoimg1: path/to/img1  */\n    setThumbDBRef.child(stripped).set(snapshot.metadata.fullPath)\n  })\n}\n\n/* checks if thumbnail exists */ \nexport function setThumbUpload(setName, title, file) {\n  const reader = new FileReader();  \n  /*\n    If setName exists, delete and upload if not just upload\n  */\n  let setThumbDBRef = db.ref(`thumbnails/${setName}/`)\n  \n  reader.onload = (evt) => {\n    setThumbDBRef.once(\"value\")\n    .then( ss => {\n      if(ss.exists()){\n          //delete\n          setThumbDBRef.remove()\n          .then(() => {\n            let thumbStorageRef = storage.ref(`thumbnails/${setName}`)\n            // Ensure all previous entries are deleted. Settings will not work because files names will be different.\n            thumbStorageRef.listAll()\n            .then((res) => {\n              res.items.forEach(item => {\n                item.delete()\n                .then(() => {\n                  // database entry is gone, remove file from storage\n                  setThumbUploadHelper(setName, title, file)\n                })\n                .catch(err => {console.log(err)})\n              })\n            })\n            .catch(err => {console.log(err)})\n          })\n          .catch(err => { console.log(err) })\n      }else{\n         setThumbUploadHelper(setName, title, file)\n      }\n    })\n  };\n  reader.readAsDataURL(file);\n}\n\nexport async function downloadSetThumbImage(setName){ \n  let thumbSnapshot = await db.ref(`thumbnails/${setName}`).once('value')\n  let thumbnailFullPath = Object.values(thumbSnapshot.val())[0]\n  return await storage.ref(thumbnailFullPath).getDownloadURL()\n}\n\n/* use img and throbber to create progress indicator */\nexport function setImageUpload(setName, title, file) {\n  const reader = new FileReader();  \n  let setNameDBRef = db.ref(`images/${setName}`)\n  reader.onload = (evt) => {\n    // Use Firebase API here to directly upload file\n    storage.ref().child(`images/${setName}/${title}`)\n    .put(file)\n    .then(snapshot => {\n      let stripped = snapshot.metadata.fullPath\n      .replace(new RegExp(/\\//, 'g'), \"\")\n      .replace(\".\", \"\")\n      // see if image object exits, preserve original upload date\n      setNameDBRef.child(stripped).once('value')\n      .then( setNameImageSnapshot => {\n          let fmtDate =  null\n          setNameImageSnapshot.val()\n          ? \n            fmtDate = setNameImageSnapshot.val().date\n          :\n            fmtDate = formatDate()\n          \n          setNameDBRef.child(stripped).set({\n            \"date\": fmtDate,\n            \"path\": snapshot.metadata.fullPath \n          })\n      } )\n    })\n    .catch(err => {console.log(err)})\n  };\n  reader.readAsDataURL(file);\n}\n\n/*\n  Given array of image paths, fetch image url from Firebase Storage using img path\n  Air Bnb doc\n  https://peterpalau.github.io/react-bnb-gallery/#/options\n  Firebase:\n    Data return alphabetically, so images are sorted by name by default\n*/\nexport async function downloadSetNameImages(imgPaths){\n  return await Promise\n  .all(imgPaths\n    .map((imgObj, i)=>{\n      return new Promise(\n        (res, rej) => {\n          console.log(imgObj.path)\n          storage.ref(imgObj.path).getDownloadURL()\n          .then(url => {\n            /* Image object doumented in react Air BnB Gallery */\n            res({\n              photo: url,\n              number: i,\n              caption: imgObj.path.split(\"/\").reverse()[0].split(\".\")[0],\n              subcaption: imgObj.date,\n              thumbnail: url\n            })\n          }).catch(err=>{rej(err)}) \n        }\n      )\n    })\n  )\n}","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent,\n\tListItem, List, ListItemText\n} \nfrom '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n/*\nShow details graphs and stuff of score data\n\n// create a new view instance for a given Vega JSON spec\nvar view = new vega.View(vega.parse(spec), {renderer: 'none'});\n\n// generate a static SVG image\nview.toSVG()\n  .then(function(svg) {\n    // process svg string\n  })\n  .catch(function(err) { console.error(err); });\n\n// generate a static PNG image\nview.toCanvas()\n  .then(function(canvas) {\n    // process node-canvas instance\n    // for example, generate a PNG stream to write\n    var stream = canvas.createPNGStream();\n  })\n  .catch(function(err) { console.error(err); });\n*/\n\n\nclass BarChart extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tspec: this.generateSpec(props.values)\n\t\t}\n\t}\n\n\tgenerateSpec(values){\n\t\treturn {\n\t\t  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n\t\t  \"width\": 400,\n\t\t  \"height\": 200,\n\t\t  \"padding\": 5,\n\n\t\t  \"data\": [\n\t\t    {\n\t\t      \"name\": \"table\",\n\t\t      \"values\": values\n\t\t    }\n\t\t  ],\n\n\t\t  \"signals\": [\n\t\t    {\n\t\t      \"name\": \"tooltip\",\n\t\t      \"value\": {},\n\t\t      \"on\": [\n\t\t        {\"events\": \"rect:mouseover\", \"update\": \"datum\"},\n\t\t        {\"events\": \"rect:mouseout\",  \"update\": \"{}\"}\n\t\t      ]\n\t\t    }\n\t\t  ],\n\n\t\t  \"scales\": [\n\t\t    {\n\t\t      \"name\": \"xscale\",\n\t\t      \"type\": \"band\",\n\t\t      \"domain\": {\"data\": \"table\", \"field\": \"category\"},\n\t\t      \"range\": \"width\",\n\t\t      \"padding\": 0.05,\n\t\t      \"round\": true\n\t\t    },\n\t\t    {\n\t\t      \"name\": \"yscale\",\n\t\t      \"domain\": {\"data\": \"table\", \"field\": \"amount\"},\n\t\t      \"nice\": true,\n\t\t      \"range\": \"height\"\n\t\t    }\n\t\t  ],\n\n\t\t  \"axes\": [\n\t\t    { \"orient\": \"bottom\", \"scale\": \"xscale\" },\n\t\t    { \"orient\": \"left\", \"scale\": \"yscale\" }\n\t\t  ],\n\n\t\t  \"marks\": [\n\t\t    {\n\t\t      \"type\": \"rect\",\n\t\t      \"from\": {\"data\":\"table\"},\n\t\t      \"encode\": {\n\t\t        \"enter\": {\n\t\t          \"x\": {\"scale\": \"xscale\", \"field\": \"category\"},\n\t\t          \"width\": {\"scale\": \"xscale\", \"band\": 1},\n\t\t          \"y\": {\"scale\": \"yscale\", \"field\": \"amount\"},\n\t\t          \"y2\": {\"scale\": \"yscale\", \"value\": 0}\n\t\t        },\n\t\t        \"update\": {\n\t\t          \"fill\": {\"value\": \"steelblue\"}\n\t\t        },\n\t\t        \"hover\": {\n\t\t          \"fill\": {\"value\": \"red\"}\n\t\t        }\n\t\t      }\n\t\t    },\n\t\t    {\n\t\t      \"type\": \"text\",\n\t\t      \"encode\": {\n\t\t        \"enter\": {\n\t\t          \"align\": {\"value\": \"center\"},\n\t\t          \"baseline\": {\"value\": \"bottom\"},\n\t\t          \"fill\": {\"value\": \"#333\"}\n\t\t        },\n\t\t        \"update\": {\n\t\t          \"x\": {\"scale\": \"xscale\", \"signal\": \"tooltip.category\", \"band\": 0.5},\n\t\t          \"y\": {\"scale\": \"yscale\", \"signal\": \"tooltip.amount\", \"offset\": -2},\n\t\t          \"text\": {\"signal\": \"tooltip.amount\"},\n\t\t          \"fillOpacity\": [\n\t\t            {\"test\": \"isNaN(tooltip.amount)\", \"value\": 0},\n\t\t            {\"value\": 1}\n\t\t          ]\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t  ]\n\t\t}\n\n\t}\n\n\t\n\tcomponentDidMount(){\n\t\t  \n\n    fetch('https://vega.github.io/vega/examples/bar-chart.vg.json')\n      .then(res => res.json())\n      .then(spec => this.renderSpec(spec))\n      .catch(err => console.error(err));\n\t}\n\n    renderSpec(spec) {\n      let vega = window.VEGA\n      let view = new vega.View(vega.parse(spec), {\n        renderer:  'canvas',  // renderer (canvas or svg)\n        container: '#barChart',   // parent DOM container\n        hover:     true       // enable hover processing\n      });\n      return view.runAsync();\n    }\n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\t\n\t}\n\n\tobjListToArray(obj){\n\t\treturn Array.from(Object.entries(obj), entry => {\n\t\t\t return new Map(Object.entries(entry[1]));\n\t\t})\n\t}\n\n\t\n\n  render(){\n\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t \t\n\t\t\t<Paper elevation={2}> \n\t\t\t\t<div id=\"barChart\" ></div>\n\t\t\t</Paper>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default BarChart = withTheme(BarChart);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \nimport vega from \"vega-statistics\"\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent,\n\tListItem, List, ListItemText\n} \nfrom '@material-ui/core';\n\nimport BarChart from \"../comps/barChart\"\n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n\n\n\nclass ScoreDataView extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\twodID: props.wodID,\n\t\t\tscores: new Array(),\n\t\t\trawScores: new Array()\n\t\t}\n\t}\n\n\tgetRawScores(arr){\n\t\treturn arr.map(score => {\n\t\t\treturn score.get(\"score\")\n\t\t})\n\t}\n\n\tgetSummaryStats(){\n\t\t// total scores, average score, median score, percentiles, Standar deviations\n\t}\n\n\tcomponentDidMount(){\n\t\tlet scoresPath = `scores/${this.state.wodID}`\n\t\tthis.scoreListener  = db.ref(scoresPath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tlet arr = this.objListToArray(ss.val())\n\t\t\t\tthis.setState({scores: arr, rawScores: this.getRawScores(arr)})\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\t\n\t}\n\n\tobjListToArray(obj){\n\t\treturn Array.from(Object.entries(obj), entry => {\n\t\t\t return new Map(Object.entries(entry[1]));\n\t\t})\n\t}\n\n\t\n\n  render(){\n  \tlet values = [\n\t\t        {\"category\": \"A\", \"amount\": 28},\n\t\t        {\"category\": \"B\", \"amount\": 55},\n\t\t        {\"category\": \"C\", \"amount\": 43},\n\t\t        {\"category\": \"D\", \"amount\": 91},\n\t\t        {\"category\": \"E\", \"amount\": 81},\n\t\t        {\"category\": \"F\", \"amount\": 53},\n\t\t        {\"category\": \"G\", \"amount\": 19},\n\t\t        {\"category\": \"H\", \"amount\": 87}\n\t\t      ]\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t\t\n\t\t\t<Paper elevation={2}> \n\t\t\t\t\n\t\t\t\t<BarChart values={values} />\n\t\t\t</Paper>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default ScoreDataView = withTheme(ScoreDataView);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent,\n\tListItem, List, ListItemText\n} \nfrom '@material-ui/core';\n\nimport ScoreDataView from \"../comps/scoreDataView\" \n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n/*\nShow details of Box and its WODS\n*/\nfunction Score(props){\n\tlet score = props.info.get(\"score\")\n\tlet username = props.info.get(\"username\")\n\t\n\treturn(\n\t\t<ListItem>\n\t\t\t<ListItemText primary={username}/>\n\t\t\t<ListItemText primary={score}/>\n\t\t</ListItem>\n\t)\n}\n\nclass ScoreView extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tlet wodID = props.wodMD.get(\"wodID\")\n\t\tthis.state = {\n\t\t\tuserMD: props.userMD,\n\t\t\twodID: wodID,\n\t\t\twodMD: props.wodMD,\n\t\t\tscores: new Array()\n\t\t}\n\t}\n\n\n\tcomponentDidMount(){\n\t\tlet scorePath = `scores/${this.state.wodID}`\n\t\tthis.scoreListener  = db.ref(scorePath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tthis.setState({scores: this.objListToArray(ss.val())})\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\tthis.scoreListener()\n\t}\n\n\tobjListToArray(obj){\n\t\treturn Array.from(Object.entries(obj), entry => {\n\t\t\t return new Map(Object.entries(entry[1]));\n\t\t})\n\t}\n\n\thandleAddScore(){\n\t\tif(!this.state.userMD){return}\n\t\tlet userScore =  document.getElementById(\"scoreViewUserScore\").value\n\t\tlet username = this.state.userMD.username\n\t\tlet uid = this.state.userMD.uid\n\t\t\n\n\t\tlet path = `scores/${this.state.wodID}/${uid}`\n\t\tconsole.log(username, userScore, uid)\n\t\tdb.ref(path).set({\n\t\t\tusername: username,\n\t\t\tscore: userScore,\n\t\t\twodID: this.state.wodMD.get(\"wodID\"),\n\t\t\tboxID: this.state.wodMD.get(\"boxID\")\n\t\t})\n\t}\n\n  render(){\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t<Grid item xs={12}>\n\t\t\t<Typography>{this.state.wodMD.get(\"title\")}</Typography>\n\t\t\t<Typography>{this.state.wodMD.get(\"scoreType\")}</Typography>\n\t\t\t<Typography>{this.state.wodMD.get(\"wodText\")}</Typography>\n\t\t</Grid>\n\n\n\n\t\t<Grid item xs={12}>\n\t\t\t<Accordion>\n\t\t\t\t<AccordionSummary\n\t\t\t\t\tstyle={{background: this.props.theme.palette.primary.main}}\n\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\taria-label=\"Expand\"\n\t\t\t\t\taria-controls=\"additional-actions2-content\"\n\t\t\t\t\tid=\"additional-actions2-header\">\n\t\t\t\t\t<Typography >\n\t\t\t\t\t\tAdd Score\n\t\t\t\t\t</Typography>\t        \n\t\t\t\t</AccordionSummary>\n\t\t\t\t<AccordionDetails>\n\t\t\t\t\t<Typography>{this.state.wodMD.get(\"scoreType\")}</Typography>\n\t\t\t\t\t<TextField\n\t\t              id=\"scoreViewUserScore\"\n\t\t              type=\"text\"\n\t\t              style={{ margin: 8}}\n\t\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t\t              inputProps={{\n\t\t                title: \"Letters only, max length 35\",\n\t\t                placeholder: \"Score\"\n\t\t              }}\n\t\t              margin=\"normal\"\n\t\t              color=\"primary\"\n\t\t              InputLabelProps={{\n\t\t                shrink: true,\n\t\t              }}\n\t\t            />\n\t\t            <Button variant=\"outline\" color=\"primary\" onClick={this.handleAddScore.bind(this)}>Add</Button>\n\n\n\t\t\t\t</AccordionDetails>\n\t\t\t</Accordion>\t\t\n\t\t</Grid>\n\t\t<Grid item xs={12}>\n\t\t\t<ScoreDataView \n\t\t\t\twodID={this.state.wodMD.get(\"wodID\")} \n\t\t\t/>\n\t\t</Grid>\n\t\t<Grid item xs={12}>\n\t\t\t<Paper>\n\t\t\t{this.state.scores.length > 0\n\t\t\t?\n\t\t\t\t<List>\n\t\t\t\t\t{\n\t\t\t\t\tthis.state.scores.map(score => {\n\t\t\t\t\t\treturn <Score info={score} />\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t    </List>\n\t\t\t:\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Card variant=\"outlined\" color=\"primary\">\n\t\t\t\t\t  <CardContent>\n\t\t\t\t\t    <Typography variant=\"h5\" component=\"h2\"gutterBottom>\n\t\t\t\t\t   \tNo Scores!\n\t\t\t\t\t    </Typography>\n\t\t\t\t\t   </CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Grid>\n\t\t\t}\n\t\t\t</Paper>\n\t\t</Grid>\n\t\t<Grid item xs={12}>\n\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={()=>{this.props.handleBack()}}>Back</Button>\n\t\t</Grid>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default ScoreView = withTheme(ScoreView);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent\n} \nfrom '@material-ui/core';\n\nimport ScoreView from \"../comps/scoreView\"\n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n/*\nShow details of Box and its WODS\n*/\nfunction Wod(props){\n\tlet title = props.info.get(\"title\")\n\tlet scoreType = props.info.get(\"scoreType\")\n\tlet wodText = props.info.get(\"wodText\")\n\t\n\treturn(\n\t\t<Grid item xs={4}>\n\t\t<Card variant=\"outlined\" color=\"primary\">\n\t\t  <CardContent>\n\t\t    <Typography variant=\"h5\" component=\"h2\"gutterBottom>\n\t\t      {title}\n\t\t    </Typography>\n\t\t    <Typography color=\"textSecondary\" >\n\t\t      {scoreType}\n\t\t    </Typography>\n\t\t    <Typography color=\"textSecondary\">\n\t\t      {wodText}\n\t\t    </Typography>\n\t\t  </CardContent>\n\t\t  <CardActions>\n\t\t    <Button size=\"small\" color=\"primary\" onClick={() => props.handleScoreView(props.info)}>View Scores</Button>\n\t\t  </CardActions>\n\t\t</Card>\n\t\t</Grid>\n\t)\n}\n\nclass BoxView extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t  userMD: props.userMD,\n\t\t  boxID: props.boxID,\n\t\t  boxMD: new Map(),\n\t\t  wods: new Array(),\n\t\t  showWodList: true,\n\t\t  currentWodID: \"\",\n\t\t  currentWodMD: new Map()\n\t\t}\n\t}\n\n\n\tcomponentDidMount(){\n\t\tlet boxPath = `boxes/${this.props.boxID}`\n\t\tlet wodPath = `wods/${this.props.boxID}`\n\t\tthis.boxListener  = db.ref(boxPath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tthis.setState({boxMD: new Map(Object.entries(ss.val()))})\n\t\t\t}\n\t\t})\n\t\tthis.wodListener  = db.ref(wodPath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tthis.setState({wods: this.objListToArray(ss.val())})\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\tthis.wodListener()\n\t\tthis.boxListener()\n\t}\n\n\tobjListToArray(obj){\n\t\treturn Array.from(Object.entries(obj), entry => {\n\t\t\t return new Map(Object.entries(entry[1]));\n\t\t})\n\t}\n\n\thandleScoreView(wodMD){\n\t\tthis.setState({showWodList: false, currentWodMD: wodMD})\n\t}\n\n\thandleBack(){\n\t\tthis.setState({showWodList: true})\n\t}\n\n\n\n  render(){\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t<Paper elevation={2}>\n\t\t\t<Typography align=\"center\" variant=\"h3\">{this.state.boxMD.get(\"title\")}</Typography>\n\n\n\t\t\t{this.state.showWodList\n\t\t\t?\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Typography variant=\"h4\">Wods</Typography>\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t{this.state.wods.length > 0\n\t\t\t\t\t?\n\t\t\t\t\t\tthis.state.wods.map(wod => {\n\t\t\t\t\t\t\treturn <Wod handleScoreView={this.handleScoreView.bind(this)} info={wod} />\n\t\t\t\t\t\t})\n\t\t\t\t\t:\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Card variant=\"outlined\" color=\"primary\">\n\t\t\t\t\t\t\t  <CardContent>\n\t\t\t\t\t\t\t    <Typography variant=\"h5\" component=\"h2\"gutterBottom>\n\t\t\t\t\t\t\t   \tNo Wods!\n\t\t\t\t\t\t\t    </Typography>\n\t\t\t\t\t\t\t   </CardContent>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</React.Fragment>\n\t\t\t:\n\t\t\t\t<ScoreView \n\t\t\t\t\tuserMD={this.state.userMD}\n\t\t\t\t\twodMD={this.state.currentWodMD} \n\t\t\t\t\thandleBack={this.handleBack.bind(this)}/>\n\n\t\t\t}\n\t\t</Paper>\n\n\n\n\t\t<Grid item xs={12}>\n\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={()=>{this.props.handleBack()}}>Back</Button>\n\t\t</Grid>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default BoxView = withTheme(BoxView);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\n\nimport \n{Grid, Paper, Button, Typography, Collapse, IconButton, TextField,\nInputBase, InputAdornment,  }\nfrom '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport BoxView from \"../comps/boxView\" \n\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\nvar db = firebase.database();\n\n\nfunction Box(props){\n  let title = props.info.get(\"title\")\n  let boxID = props.info.get(\"boxID\")\n  return(\n    <Grid item xs={12}>\n      <Paper>\n        <Grid container itemxs={12}>\n        <Grid item xs={10}>\n          <Typography align=\"left\" style={{padding: \"2.5vw\"}} variant=\"body1\">\n            {title}\n          </Typography>\n        </Grid>\n        <Grid item xs={2}>\n          <Button variant=\"outlined\" onClick={()=>{props.handleBoxView(boxID)}}>View</Button>\n        </Grid>\n      </Grid>\n      </Paper>\n    </Grid>)\n}\n\n\n\n\nclass BoxSearch extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      allBoxes: new Array(),\n      filteredBoxes: new Array()\n    }  \n  }\n\n  objectsToArray(obj){\n    return Array.from(Object.entries(obj), entry => {\n       return new Map(Object.entries(entry[1]));\n    })\n  }\n\n  componentDidMount(){\n    this.allBoxesListener = db.ref(\"boxes\")\n    .on('value', ss => {\n      if(ss && ss.exists()){\n        let arr = this.objectsToArray(ss.val())\n        arr.sort((x, y) => {return x.get(\"title\").toLowerCase() > y.get(\"title\").toLowerCase() ? -1 : 1})\n        this.setState({\n          allBoxes: arr,\n          filteredBoxes: arr\n        })\n      }\n    })\n  }\n\n  \n  componentWillUnmount(){\n    if(this.allBoxesListener !== undefined){\n      this.allBoxesListener()\n    }\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n  onKeyUp(data){\n    if((data.keyCode || data.which) == 13){\n        \n    }\n  }\n\n  onChange(ev){\n    let val = ev.target.value\n    console.log(val)\n    let filteredBoxes = this.state.allBoxes.filter(box =>{\n      return box.get(\"title\").toLowerCase().includes(val.toLowerCase())\n    })\n\n    this.setState({filteredBoxes: filteredBoxes})\n  }\n\n  render () {\n    return (\n      <Grid item xs={12} >\n      <Paper elevation={2} component=\"form\">\n  \n       <TextField\n       fullWidth\n        variant=\"outlined\"\n        onKeyUp={this.onKeyUp.bind(this)}\n        onChange={this.onChange.bind(this)}\n        placeholder=\"Search Boxes\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon color=\"primary\" />\n            </InputAdornment>\n          ),\n        }}\n      />\n      \n      \n      \n      </Paper>\n      <Grid item xs={12}>\n        {\n          this.state.filteredBoxes.map((box, i) => {\n            return <Box key={i} info={box} handleBoxView={this.props.handleBoxView}/>\n          })\n        }\n      </Grid>\n      </Grid>\n    );\n  }\n}\n\n\nclass BoxSearchPage extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      showBoxView: false,\n      currentBoxID: null\n    }  \n  }\n\n\n  componentDidMount(){\n   \n  }\n\n  \n  componentWillUnmount(){\n    \n  }\n\n  handleBoxView(boxID){\n    console.log(`Show details for: ${boxID}`)\n    this.setState({showBoxView: true, currentBoxID: boxID})\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n  handleBack(){\n    this.setState({showBoxView: false})\n  }\n\n\n  render () {\n    return (\n    \t<Grid item xs={12} >\n      {!this.state.showBoxView\n        ?\n        <BoxSearch handleBoxView={this.handleBoxView.bind(this)} />\n        :\n        \n        <BoxView userMD={this.state.userMD} handleBack={this.handleBack.bind(this)} boxID={this.state.currentBoxID} />\n\n      }\n      }\n  \t\t</Grid>\n    )\n  }\n}\nexport default BoxSearchPage = withTheme(BoxSearchPage);\n","import React, { Component } from 'react'\nimport postData from \"../utils/api\"\nimport { Grid, TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n// Add the Firebase services that you want to use\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\"; \n\nimport \"../css/login.css\"\nimport \"../styles.css\"\n\n\nexport default class Login extends Component {\n  \n  handleSubmit(ev){\n    let email = document.getElementById('email')\n\n    let pass1 = document.getElementById('password')\n    let pass2 = document.getElementById('passwordConfirm')\n    \n    console.log(email.value, pass1)\n  \n    firebase.auth().signInWithEmailAndPassword(email.value, pass1.value)\n    .then(res=>{\n      console.log(\"Firebase res\")\n      console.log(res)\n      this.props.onLogin(res.user)\n    })\n    .catch(function(error) {\n      console.log(error)\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // ...\n    });\n  }\n\n  // <!-- TODO: Add SDKs for Firebase products that you want to use\n  //      https://firebase.google.com/docs/web/setup#available-libraries -->\n\n  render () {\n    return (\n      <Grid container id=\"login\" align=\"center\" justify=\"center\">\n        <br />\n        <Grid item xs={12} >\n          <Paper elevation=\"2\">\n            <Typography variant=\"h4\">\n              Login\n            </Typography>\n          \n            <br />\n        \n            <TextField\n            id=\"email\"\n            style={{ margin: 8 }}\n            placeholder=\"Email\"\n            margin=\"normal\"\n            InputLabelProps={{\n            shrink: true,\n            }}\n            /><br /><br />\n            <TextField\n            id=\"password\"\n            type=\"password\"\n            style={{ margin: 8 }}\n            placeholder=\"Passowrd\"\n            margin=\"normal\"\n            InputLabelProps={{\n            shrink: true,\n            }}\n            />\n            <br/><br/>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} >\n          <Paper elevation=\"2\">\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit.bind(this)}>\n              Login\n            </Button>\n            <Link to=\"/register\" className=\"no-line\" style={{'padding-left': '10px'}}>\n              <Button variant=\"outlined\" color=\"secondary\" >\n                Register\n              </Button>\n            </Link>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress\n} \nfrom '@material-ui/core';\n\nimport BoxView from \"../comps/boxView\" \n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n/*\nAccordion to toggle between list of boxes and the box view component\n**box view compnent will be sued in search as well\n\n\n*/\n\n\nclass BoxListAccordion extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      userBoxes: props.userBoxes,\n      hasBoxes: props.hasBoxes,\n      showBoxList: true,\n      currentBoxID: \"\"\n    }\n  }\n\n\n  componentDidMount(){\n  \n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n  componentWillUnmount(){\n  \tconsole.log(\"Component will unmount\")\n  }\n\n  handleBoxView(boxID){\n  \tconsole.log(\"Show boxView for: \", boxID)\n\n  \tthis.setState({showBoxList: false, currentBoxID: boxID})\n  }\n\n  handleBack(){\n  \tthis.setState({showBoxList: true})\n  }\n\n  render(){\n\treturn(\n\t<Accordion>\n\t\t<AccordionSummary\n\t\tstyle={{background: this.props.theme.palette.primary.main}}\n\t\texpandIcon={<ExpandMoreIcon />}\n\t\taria-label=\"Expand\"\n\t\taria-controls=\"additional-actions2-content\"\n\t\tid=\"additional-actions2-header\"\n\t\t>\n\t\t\t<Typography >\n\t\t\tBoxes and Wods\n\t\t\t</Typography>\t        \n\t\t</AccordionSummary>\n\t\t<AccordionDetails>\n\t\t{this.state.showBoxList\n\t\t?\n\t\t\t<Grid container >\n\t\t\t\t<Grid container  item={12}>\n\t\t\t\t{this.state.userBoxes.length > 0\n\t\t\t\t?\n\t\t\t\t\tthis.state.userBoxes\n\t\t\t\t\t.map((box, i) => {\n\t\t\t\t\treturn (<Box key={i} handleBoxView={this.handleBoxView.bind(this)} info={box} />)\n\t\t\t\t\t})\n\t\t\t\t:\n\t\t\t\t<Grid item zeroMinWidth xs={6}>\n\t\t\t\t\t<Paper elevation={4} style={{padding: \"1vw\"}}>\n\t\t\t\t\t\t<Typography noWrap align=\"left\">No boxes Found!</Typography>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t:\n\t\t\t<BoxView handleBack={this.handleBack.bind(this)} boxID={this.state.currentBoxID} />\n\n\t\t}\n\n\t\t\n\t\t</AccordionDetails>\n\t</Accordion>\t\t\n\t)\n  }\n}\n\n\nfunction Box(props){\n\tconsole.log(props.info.get(\"title\"))\n\tlet title = props.info.get(\"title\")\n\tlet boxID = props.info.get(\"boxID\")\n\treturn(\n\t<Grid item zeroMinWidth xs={6}>\n\t<Paper elevation={4} style={{padding: \"1vw\"}}>\n\t\t<Typography noWrap align=\"left\">Title: {title}</Typography>\n\t\t<Typography  noWrap align=\"left\">Id: {boxID}</Typography>\n\t\t<Button variant=\"outlined\" color=\"primary\" onClick={()=>{props.handleBoxView(boxID)}}>View</Button>\n\t</Paper>\n\t</Grid>)\n}\n\n  \nexport default BoxListAccordion = withTheme(BoxListAccordion);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress\n} \nfrom '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\n\nimport BoxListAccordion from \"../comps/boxListAccordion\"\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n\n/*\nAccordion for:\nAdd Box\nShow Boxes\n\n\n*/\n\n\n\n\n\n\n\nclass OwnerBox extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      userBoxes: new Array(),\n      hasBoxes: false,\n      addBoxProgress: true,\n      scoreTypeSelectVal: \"\",\n      boxIDSelectVal: \"\"\n    }\n  }\n  \n\n  getArrayOfBoxes(boxObj){\n  \treturn Array.from(Object.entries(boxObj), entry => {\n  \t\t return new Map(Object.entries(entry[1]));\n  \t})\n  }\n\n  listenForBoxes(){\n  \tif(this.state.user === null){return}\n  \tconsole.log(\"Listening for boxes\")\n  \t// if listner has been set, dont reset it\n  \tlet path = `users/${this.state.user.uid}/boxes`\n  \t\n  \tthis.boxListener = db.ref(path).on('value', ss => {\n  \t\tif(ss != null && ss.exists()){\n\t  \t\tconsole.log(\"Snapshot:\")\n\t  \t\tconsole.log(ss.val())\n  \t\t\tthis.updateState({hasBoxes: true, userBoxes: this.getArrayOfBoxes(ss.val())})\n  \t\t\t\n\n  \t\t}\n  \t})\n  }\n\n  updateState(newState){\n  \tconsole.log(\"Seeting state\")\n  \tconsole.log(newState)\n  \tthis.setState({...newState})\n  }\n\n  componentDidMount(){\n  \tthis.listenForBoxes()\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n    if(newProps.userMD.accountType === \"owner\"){\n    \tthis.listenForBoxes()\n    }\n  }\n\n  componentWillUnmount(){\n  \tconsole.log(\"Component will Unmounting\")\n  \tif(this.boxListener !== undefined){\n  \t\tconsole.log(\"Unmounting OwnerBox\")\n    \tthis.boxListener()\n  \t}\n  }\n\n  onKeyUp(data){\n    if((data.keyCode || data.which) == 13){\n        let a = document.getElementById(\"ownerBoxAddBoxTitle\")\n        let title = a.value\n        this.setState({showAddBoxProgress: true})\n        this.createBox(title)\n    }\n  }\n\n  createWOD(){\n  \tlet boxID = document.getElementById(\"ownerBoxAddWodBoxID\").value\n  \tlet title = document.getElementById(\"ownerBoxAddWodTitle\").value\n  \tlet scoreType = document.getElementById(\"ownerBoxAddWodScoreType\").value\n  \tlet wodText = document.getElementById(\"ownerBoxAddWodWodText\").value\n\n  \tif(!boxID || !title || !scoreType || !wodText){\n  \t\tconsole.log(\"Error with input createWod\")\n  \t\tconsole.log(boxID, title, scoreType, wodText)\n  \t\treturn\n  \t}\n\n  \tlet wodBoxPath = `wods/${boxID}`\n\tlet wodID = db.ref(wodBoxPath).push().key\n\tlet wodPath = `${wodBoxPath}/${wodID}`\n\n\tdb.ref(wodPath).set({\n\t\tboxID: boxID,\n\t\twodID: wodID,\n\t\ttitle: title,\n\t\tscoreType: scoreType,\n\t\twodText: wodText\n\t})\n  }\n\n  createBox(title){\n  \tlet boxNamesTitle = `boxNames/${title}`\n  \tlet userBoxes = `users/${this.props.user.uid}/boxes`\n  \tlet boxes = `boxes`\n\n\tdb.ref(boxNamesTitle).once(\"value\", ss =>{\n\t\tif(ss.exists()){\n\t\t\talert(\"Title is taken\")\n\t\t}else{\n\t\t\tconsole.log(\"Adding box data\")\n\t\t\tlet boxID = db.ref(boxes).push().key\n\t\t\tlet boxData = {\n\t\t\t\ttitle: title,\n\t\t\t\townerUID: this.props.user.uid,\n\t\t\t\tboxID: boxID\n\t\t\t}\n\n\t\t\t// add to list of all boxes\n\t\t\tdb.ref(`${boxes}/${boxID}`).set(boxData)\n\t\t\t// add to list of boxNames\n\t\t\tdb.ref(boxNamesTitle).set(boxData)\n\t\t\t// add to users list of boxes\n\t\t\tdb.ref(`${userBoxes}/${boxID}`).set(boxData)\n\t\t\tthis.setState({showAddBoxProgress: false})\n\t\t}\n\t})\n  }\n\n\n\n  handleSelectValChange(ev){\n\tconst name = ev.target.name;\n\tconsole.log(name)\n    this.setState({\n      [name]: ev.target.value\n  \t})\n  }\n \n  render () {\n    return (\n    \t<Grid item xs={12} id=\"ownerBox\">\n\t\t\t<Typography variant=\"h3\">\n\t\t\t\tWelcome, {this.state.userMD.accountType}!\n\t\t\t</Typography>\n\t\n\t\t\t<Accordion>\n\t        <AccordionSummary\n\t\t\t  style={{background: this.props.theme.palette.primary.mainGrad}}\n\t          expandIcon={<ExpandMoreIcon />}\n\t          aria-label=\"Expand\"\n\t          aria-controls=\"additional-actions0-content\"\n\t          id=\"additional-actions0-header\"\n\t        >\n        \t<Typography >\n        \t\tAdd WOD\n        \t</Typography>\t        \n\t        </AccordionSummary>\n\t        <AccordionDetails>\n\t          <Select\n\t\t          native\n\t\t          inputProps={{\n\t\t            name: 'Box',\n\t\t            id: 'ownerBoxAddWodBoxID',\n\t\t          }}>\n\t\t          <option aria-label=\"None\" value=\"\" />\n\t\t          {\n\t\t          \tthis.state.hasBoxes\n\t\t          \t?\n\t\t          \tthis.state.userBoxes\n\t        \t\t.map((box, i) => {\n\t\t        \t\treturn (<option key={i} value={box.get(\"boxID\")} >{box.get(\"title\")}</option>)\n\t\t        \t})\n\t\t        \t:\n\t\t        \t<React.Fragment></React.Fragment>\n\t\t          }\n\t\t      </Select>\n\t          <TextField\n\t              id=\"ownerBoxAddWodTitle\"\n\t              type=\"text\"\n\t              style={{ margin: 8}}\n\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t              inputProps={{\n\t                title: \"Letters only, max length 35\",\n\t                placeholder: \"Title\"\n\t              }}\n\t              margin=\"normal\"\n\t              color=\"primary\"\n\t              InputLabelProps={{\n\t                shrink: true,\n\t              }}\n\t            />\n\t             <TextField\n\t              id=\"ownerBoxAddWodWodText\"\n\t              type=\"text\"\n\t              style={{ margin: 8}}\n\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t              inputProps={{\n\t                title: \"Letters only, max length 35\",\n\t                placeholder: \"Workout here\"\n\t              }}\n\t              margin=\"normal\"\n\t              color=\"primary\"\n\t              InputLabelProps={{\n\t                shrink: true,\n\t              }}\n\t            />\n\t            <Select\n\t\t          native\n\t\t          \n\t\t          inputProps={{\n\t\t            name: 'Score Type',\n\t\t            id: 'ownerBoxAddWodScoreType',\n\t\t          }}\n\t\t        >\n\t\t          <option aria-label=\"None\" value=\"\" />\n\t\t          <option value={\"time\"}>Time</option>\n\t\t          <option value={\"reps\"}>Reps</option>\n\t\t          <option value={\"rounds\"}>Rounds</option>\n\t\t      </Select>\n\t\t      <Button variant=\"outlined\" onClick={this.createWOD.bind(this)}>\n\t\t      \tEnter WOD\n\t\t      </Button>\n\t        </AccordionDetails>\n\t\t    </Accordion>\n\n\n\t\t\t<Accordion>\n\t\t        <AccordionSummary\n\t\t\t\t  style={{background: this.props.theme.palette.primary.mainGrad}}\n\t\t          expandIcon={<ExpandMoreIcon />}\n\t\t          aria-label=\"Expand\"\n\t\t          aria-controls=\"additional-actions1-content\"\n\t\t          id=\"additional-actions1-header\"\n\t\t        >\n\t\t        \t<Typography >\n\t\t        \t\tAdd Box\n\t\t        \t</Typography>\t        \n\t\t        </AccordionSummary>\n\t\t        <AccordionDetails>\n\t\t          <TextField\n\t\t              id=\"ownerBoxAddBoxTitle\"\n\t\t              type=\"text\"\n\t\t              style={{ margin: 8}}\n\t\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t\t              inputProps={{\n\t\t                title: \"Letters only, max length 35\",\n\t\t                placeholder: \"Name of box\"\n\t\t              }}\n\t\t              onKeyUp={this.onKeyUp.bind(this) }\n\t\t              margin=\"normal\"\n\t\t              color=\"primary\"\n\t\t              InputLabelProps={{\n\t\t                shrink: true,\n\t\t              }}\n\t\t            />\n\t\t            {this.state.showAddBoxProgress\n\t\t            ?\n\t\t            \t<LinearProgress  color=\"secondary\"/>\t\n\t\t            :\n\t\t            \t<React.Fragment></React.Fragment>\n\t\t            }\n\t\t        </AccordionDetails>\n\t\t    </Accordion>\n\n\t\t  \t<BoxListAccordion \n\t\t  \t\tuser = {this.state.user}\n\t\t\t\tuserMD = {this.state.userMD}\n\t\t\t\tuserBoxes = {this.state.userBoxes}\n\t\t\t\thasBoxes = {this.state.hasBoxes}\n\t\t  \t/>\n\t\t  \n    \t\n  \t\t</Grid>\n    );\n  }\n}\n\n\n\n\nexport default OwnerBox = withTheme(OwnerBox);","// Add the Firebase services that you want to use\nimport firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\"; \nimport \"firebase/database\"; \n\nimport React, { Component } from 'react'\nimport { Grid, TextField, Button, Typography } from '@material-ui/core';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\nvar db = firebase.database();\n\nconst usernameMaxLength = 12\nconst usernameMaxLengthErrMsg = \"Username cannot be longer than 12 characters\"\nconst usernameErrMsg = \"Username can only contain letters & numbers\" \n\n\nexport default class UsernamePanel extends Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD\n    }\n  }\n\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n\ncomponentDidMount(){\n  this.hideUsernameInput()\n}\ncomponentDidUpdate(){\n  this.hideUsernameInput()\n}\n\n\n  // <!-- TODO: Add SDKs for Firebase products that you want to use\n  //      https://firebase.google.com/docs/web/setup#available-libraries -->\n\n  updateUsername(ev){\n    let usernameInput = document.getElementById('updateUsernameInput')\n    \n\n    if(usernameInput.style.display === \"none\"){\n      usernameInput.style.display = \"block\"\n\n    }else{\n\n      let re = /\\W/g  // match non word characters ^[A-Za-z0-9]\n    \n      if(usernameInput.value.length > 12){\n        alert(usernameMaxLengthErrMsg)\n        return\n      } \n      if(re.exec(usernameInput.value) !== null ){\n        alert(usernameErrMsg)\n        return\n      }\n      //update \n      if(usernameInput.value.length <= 0){ \n        this.hideUsernameInput()     \n        return \n      }\n\n      db.ref(`users/${this.state.user.uid}/`)\n      .update({\n        \"username\": usernameInput.value\n      })\n      .then(() => {\n       this.hideUsernameInput()\n      })\n      .catch(err => { console.log(err) })\n    }\n  }\n\n  onKeyUp(data){\n    if((data.keyCode || data.which) == 13){\n        this.updateUsername()\n    }\n  }\n\n  hideUsernameInput(){\n    try{\n      let usernameInput = document.getElementById('updateUsernameInput')\n      usernameInput.value = \"\"\n      usernameInput.style.display = \"none\"\n    }catch{return}\n  }\n\n  render () {\n    \n    return (\n    <Grid container id=\"usernamePanel\" >\n    {\n      !this.state.userMD\n      ? \n        <h1> Loading </h1>\n      :\n        <React.Fragment>\n          <Grid item xs={12} >\n            <Typography gutterBottom variant=\"h4\">\n              Username\n            </Typography>\n            <Typography gutterBottom variant=\"h5\">\n              {this.state.userMD.username}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} >\n            <Button  \n                variant=\"outlined\" \n                color=\"primary\" \n                onClick={this.updateUsername.bind(this)}\n            >\n              <Typography>\n                  Update Username\n              </Typography>\n            </Button>\n          </Grid>\n          <Grid item xs={12} >\n            <TextField\n              id=\"updateUsernameInput\"\n              type=\"text\"\n              style={{ margin: 8}}\n              pattern=\"[A-Za-z]{12}\"\n              inputProps={{\n                title: \"Letters only, max length 12\",\n                placeholder: \"New username\"\n              }}\n              onKeyUp={this.onKeyUp.bind(this) }\n              margin=\"normal\"\n              color=\"primary\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />    \n          </Grid>\n        </React.Fragment>\n    }\n    </Grid>\n    );\n  }\n}\n\n\n\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\n\nimport { Grid, Paper, Button, Typography, Collapse } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nimport Login from \"../comps/login\"\nimport OwnerBox from \"../comps/ownerBox\"\n\n\nimport UsernamePanel from \"../comps/usernamePanel\"\nimport history from \"../history\"\n\n\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\n\nvar db = firebase.database();\n\n\nexport class PageContent extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD\n    }\n    console.log(props)\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n  \n  sendVerificationEmail(){\n    this.state.user.sendEmailVerification()\n    .then( () => {\n        this.setState({emailAlertOpen: true})\n    })\n    .catch( err => {console.log(err)})\n  }\n\n  render(){\n    return (\n      <Grid container align=\"center\">\n      <Grid item xs={12}>\n        <Collapse in={this.state.emailAlertOpen}>\n          <Alert onClose={() => {this.setState({emailAlertOpen: false})}}>\n            Email sent!\n          </Alert>\n        </Collapse>\n      </Grid>\n      <Grid item xs={12}>\n          <Paper elevation={2} >\n          </Paper>\n          {\n          !this.state.user.emailVerified\n          ?\n          \n            <Paper elevation={2}>\n              <Button variant=\"outline\" onClick={this.sendVerificationEmail.bind(this)} >\n               <Typography  variant=\"h5\" component=\"h3\">\n                  Send Verification Email\n                </Typography>\n              </Button>\n            </Paper>\n          :\n            <React.Fragment></React.Fragment>\n          }\n\n\n          <Paper elevation={2}>\n            <OwnerBox user={this.state.user}\n              userMD={this.state.userMD}\n            />\n          </Paper>\n      </Grid>\n\n\n\n\n      <Grid item xs={12}>\n        <Grid item xs={12} className=\"compBorderOutline\">\n          <Paper elevation={2}>\n            <Button variant=\"outlined\" color=\"secondary\"\n                      onClick={this.props.onLogout}>\n                  <Typography variant=\"h6\" component=\"h6\">\n                    Logout\n                  </Typography>\n            </Button>\n          </Paper>\n          \n        </Grid>\n      </Grid>\n    </Grid>\n\n    )\n  }\n}\n\n\n\nexport default class ProfilePage extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD\n    }  \n  }\n\n \n  handleLogout(){\n    firebase.auth().signOut().then(() => {\n      alert('Signed Out');\n      this.setState({user: null})\n    }, (error) => {\n      console.error('Sign Out Error', error )\n    });\n  }\n\n  /*\n    login.js has the form and does the login, calls this with the user obj\n  */\n  handleLogIn(user){\n      this.setState({user: user} )\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n\n  render () {\n    \n    return (\n    \t<Grid item xs={12} id=\"profilepage\">\n        {\n          this.state.user !== null\n          ? <PageContent \n                onLogout={this.handleLogout.bind(this)} \n                user= {this.state.user}\n                userMD={this.state.userMD}\n            />\n          : <Login \n            onLogin={this.handleLogIn.bind(this)} />\n        }\n  \t\t</Grid>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\n\nimport { AppBar, Toolbar, IconButton, Button, Typography} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withTheme } from '@material-ui/core/styles';\n\n\nclass Header extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<AppBar position=\"static\" \n\t\t\t\t\tstyle={{background:this.props.theme.palette.background.toolbar}}>\n\t\t\t<Toolbar disableGutters={false}>\n\t\t\t    <Typography gutterBottom variant=\"h3\" style={{\"margin\": \"0 auto\"}}>\n\t\t            WodTrackrr\n\t\t          </Typography>\n\t\t        </Toolbar>\n\t\t\t</AppBar>\n\t\t)\n\t}\n}\n\n\nexport default Header = withTheme(Header);","let apptheme = {\n   \"palette\":{\n      \"common\":{\n         \"black\":\"#000\",\n         \"white\":\"#fff\"\n      },\n      \"background\":{\n         \"paper\":\"#2e3134\",\n         \"toolbar\": \"#0d0e0e\",\n         \"tableHeader\": \"#1b1d1e\",\n         \"default\":\"rgba(48, 48, 48, 1)\"\n      },\n      \"primary\":{\n         \"main\":\"#03ceec\",\n         \"mainGrad\": 'linear-gradient(90deg,#0890fd,#01d3fe)',\n         \"contrastText\":\"rgba(255, 255, 255, 1)\"\n      },\n      \"secondary\":{\n         \"light\":\"#6C30FF\",\n         \"main\":\"#6C30FF\",\n         \"dark\":\"#6C30FF\",\n         \"contrastText\":\"#fff\"\n      },\n      \"error\":{\n         \"light\":\"#ea4331\",\n         \"main\":\"#c43627\",\n         \"dark\":\"#2d0d0b\",\n         \"contrastText\":\"rgba(255, 255, 255, 1)\"\n      },\n      \"text\":{\n         \"primary\":\"#ffffff\",\n         \"secondary\":\"#e0dfdf\",\n         \"disabled\":\"#bdbdbd\",\n         \"hint\":\"#afafaf\"\n      }\n   },\n   \n};\n\nexport default apptheme = apptheme;","import firebase, { FirebaseAuthContext } from \"./context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/storage\"; \nimport \"firebase/database\"; \n\n\nimport React from \"react\";\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\n\n\nimport { Paper, Button, BottomNavigation, BottomNavigationAction ,Grid, Container} from '@material-ui/core';\n\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PanoramaIcon from '@material-ui/icons/Panorama';\n\nimport \"./styles.css\";\n\n\nimport BoxSearch from \"./pages/boxSearch\"\nimport Profile from \"./pages/profile\"\nimport Header from \"./comps/header\"\n\nimport postData from \"./utils/api\"\n\nimport history from \"./history\"\n\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport pink from '@material-ui/core/colors/pink';\nimport teal from '@material-ui/core/colors/teal';\n\nimport apptheme from \"./css/apptheme\"\n\nvar db = firebase.database();\n\n// Needs to move to its own file\nlet theme = createMuiTheme(apptheme);\ntheme = responsiveFontSizes(theme)\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props)\n  \n    this.state={\n      btmnav: 0,\n      user: firebase.auth().currentUser,\n      userMD: false\n    }\n    \n\n\n\n    this.firebaseAuthListener = firebase.auth()\n    .onAuthStateChanged(user => {\n      if(user){\n        console.log(\"Firebase user listener\")\n        this.setState({ user: user })\n        this.userMDListener = db.ref('users/' + user.uid)\n          .on('value', metadata => {\n             if(metadata.val()){\n              console.log(\"Metadata change\")\n              console.log(metadata.val())\n              this.setState({\n                userMD: metadata.val()\n              })\n             }\n          })\n      }\n    })\n  }\n\n  componentWillUnmount(){\n    if(this.firebaseAuthListener !== undefined)\n      this.firebaseAuthListener && this.firebaseAuthListener()\n    if(this.userMDListener !== null)\n      this.userMDListener && this.userMDListener()\n  }\n\n\n          // <Route path=\"/subscribe\"  >\n          //   <SubscribePage \n              // user={this.state.user}\n              // userMetadata={this.state.userMetadata}\n          //   />\n\n  render(){\n    return(\n    <FirebaseAuthContext.Provider>\n    <HashRouter history={history} >\n   \n    <ThemeProvider theme={theme}>\n      \n      <Grid container>\n\n        <Grid item xs={12} id=\"page-header\">\n          <Header className=\"header\" />\n        </Grid>\n        <Grid item xs={11} id=\"page-container\" className=\"page-content\">\n        <Switch>\n          <Route exact path=\"/boxSearch\">\n            <BoxSearch user={this.state.user}\n              userMD={this.state.userMD} />\n          </Route>     \n          <Route exact path=\"/profile\">\n            <Profile user={this.state.user}\n              userMD={this.state.userMD} />\n          </Route>      \n        </Switch>\n        </Grid>\n\n        <Grid item xs={12} className=\"footer\">\n          <BottomNavigation className=\"footer\"\n            value = {this.state.btmnav}\n            onChange = {(event, newValue) => {\n                this.setState({btmnav: newValue})\n              }}\n              style={{background: theme.palette.background.toolbar}}\n            showLabels>\n            <BottomNavigationAction label=\"Search\" component={Link} to=\"/boxSearch\" icon={<PersonIcon />}  />\n            <BottomNavigationAction label=\"Profile\" component={Link} to=\"/profile\" icon={<PersonIcon />}  />\n          </BottomNavigation>\n        </Grid>\n    </Grid>\n    \n       </ThemeProvider>\n\n      </HashRouter>\n      </FirebaseAuthContext.Provider>\n  \n    );\n  }\n}\n\nApp.contextType = FirebaseAuthContext;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\n\n\n\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}