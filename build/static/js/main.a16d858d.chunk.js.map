{"version":3,"sources":["context/firebaseContext.js","utils/formatting.js","utils/api.js","comps/lineChart.js","comps/barChart.js","comps/scoreDataView.js","comps/scoreView.js","comps/boxView.js","pages/boxSearch.js","comps/login.js","comps/boxListAccordion.js","comps/ownerBox.js","comps/usernamePanel.js","history.js","pages/profile.js","comps/header.js","css/apptheme.js","app.js","index.js"],"names":["firebase","FirebaseAuthContext","React","createContext","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cvtTimetoInt","x","console","log","split","mins","seconds","parseInt","cvtIntToTime","Math","floor","secs","storage","database","LineChart","props","state","dataType","data","values","stats","Map","this","ctx","document","getElementById","barChart","Chart","type","labels","datasets","barPercentage","barThickness","maxBarThickness","minBarLength","backgroundColor","theme","palette","primary","main","options","scales","yAxes","ticks","callback","label","index","tooltips","callbacks","tooltipItem","datasetIndex","yLabel","maintainAspectRatio","plugins","beforeInit","chart","newProps","setState","createChart","obj","Array","from","Object","entries","entry","Grid","item","xs","Paper","elevation","id","width","height","Component","withTheme","BarChart","binData","_mean","sd","_","standardDeviation","mean","createLabels","binnedData","diff","numSDAway","abs","stlye","db","ScoreDataView","wodID","scores","rawScores","arr","map","score","get","scoresPath","scoreListener","ref","on","ss","exists","getData","val","scoreType","getDescStats","push","sort","y","cvtReps","i","length","vals","min","max","median","Typography","Score","info","username","ListItem","ListItemText","ScoreView","wodMD","userMD","scorePath","objListToArray","userScore","value","uid","path","set","boxID","Accordion","AccordionSummary","style","background","expandIcon","aria-label","aria-controls","AccordionDetails","TextField","margin","pattern","inputProps","title","placeholder","color","InputLabelProps","shrink","Button","variant","onClick","handleAddScore","bind","List","Card","CardContent","component","gutterBottom","align","handleBack","Wod","wodText","CardActions","size","handleScoreView","BoxView","boxMD","wods","showWodList","currentWodID","currentWodMD","boxPath","wodPath","boxListener","wodListener","Fragment","container","wod","Box","itemxs","padding","alignItems","handleBoxView","BoxSearch","user","allBoxes","filteredBoxes","allBoxesListener","objectsToArray","toLowerCase","undefined","keyCode","which","ev","target","filter","box","includes","fullWidth","onKeyUp","onChange","InputProps","startAdornment","InputAdornment","position","key","mainGrad","BoxSearchPage","showBoxView","currentBoxID","Login","email","pass1","signInWithEmailAndPassword","then","res","onLogin","catch","error","code","message","justify","handleSubmit","to","className","BoxListAccordion","userBoxes","hasBoxes","showBoxList","zeroMinWidth","noWrap","OwnerBox","addBoxProgress","scoreTypeSelectVal","boxIDSelectVal","boxObj","updateState","getArrayOfBoxes","newState","listenForBoxes","accountType","showAddBoxProgress","createBox","wodBoxPath","boxNamesTitle","once","alert","boxData","ownerUID","name","Select","native","createWOD","LinearProgress","createBrowserHistory","PageContent","sendEmailVerification","emailAlertOpen","err","Collapse","in","Alert","onClose","emailVerified","sendVerificationEmail","onLogout","ProfilePage","auth","signOut","handleLogout","handleLogIn","Header","AppBar","toolbar","Toolbar","disableGutters","apptheme","createMuiTheme","responsiveFontSizes","App","btmnav","currentUser","firebaseAuthListener","onAuthStateChanged","userMDListener","metadata","Provider","history","ThemeProvider","exact","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","Link","icon","contextType","ReactDOM","render"],"mappings":"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","file":"static/js/main.a16d858d.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\"; \nimport React from \"react\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGE8_j8cfIBmIzcvP6CVgG2yC6EE1Ep1U\",\n  authDomain: \"wodtrackrr.firebaseapp.com\",\n  databaseURL: \"https://wodtrackrr.firebaseio.com\",\n  projectId: \"wodtrackrr\",\n  storageBucket: \"wodtrackrr.appspot.com\",\n  messagingSenderId: \"743601990099\",\n  appId: \"1:743601990099:web:5937e9151eaad13e93a726\",\n  measurementId: \"G-39CF0BRPMH\"\n};\n\n\n\nexport default firebase\nexport const FirebaseAuthContext = React.createContext(firebase.initializeApp(firebaseConfig));","export default function cvtReps(x){\n\treturn parseInt(x)\n}\n\nexport function cvtTimetoInt(x){\n\tconsole.log(\"Split\", x)\n\tlet [mins, seconds] = x.split(\":\")\n\treturn (parseInt(mins) * 60) + parseInt(seconds)\n}\n\n\nexport function cvtIntToTime(x){\n\tlet mins = Math.floor(x / 60)\n\tlet secs = x - (mins*60)\n\tif(secs < 10){\n\t\tsecs = `0${secs}`\n\t}\n\treturn `${mins}:${secs}`\n}","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\"; \nimport \"firebase/storage\";\nimport \"firebase/database\"; \nvar storage = firebase.storage()\nvar db = firebase.database();\n\n\n\nfunction formatDate(){\n  const [{ value: month },,{ value: day },,{ value: year }] \n    = new Intl.DateTimeFormat('en', \n      { year: 'numeric', month: 'numeric', day: '2-digit' })\n      .formatToParts(new Date())  \n  console.log(new Intl.DateTimeFormat('en', \n      { year: 'numeric', month: 'numeric', day: '2-digit' }))\n  return `${year}/${month}/${day}`\n}\n\nexport default async function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n\nexport async function getImagePreview(fileObjs) {\n  return await Promise.all(fileObjs.map(fileObj => {\n    return new Promise((res, rej) => {\n      const reader = new FileReader();  \n  \n      reader.onload = (evt) => {\n        res(evt)\n      }\n      // add error event\n      reader.readAsDataURL(fileObj)\n      }) \n  }))\n  \n  \n}\n\n\nexport function postCaptionUpload(ts, caption){\n  let DBRef = db.ref(`posts/${ts}/`)\n  DBRef.child('caption')\n  .set(caption)\n  .then( () => {\n    console.log(\"Caption uploaded\")\n  })\n  .catch(err => { console.log(err) })\n}\n\nexport function postMediaUpload(fileObj, ts, i) {\n  const reader = new FileReader();  \n  console.log(fileObj, ts, i)\n  let DBRef = db.ref(`posts/${ts}/`)\n  let fileType = fileObj.type.split('/')[0]\n  reader.onload = (evt) => {\n    // Use Firebase API here to directly upload file?\n    storage.ref()\n    .child(`posts/${ts}/${fileObj.name}`)\n    .put(fileObj)\n    .then(snapshot => {\n      if(snapshot){\n        console.log(snapshot)\n        DBRef.child(`media/${i}`)\n        .update({\n          type: fileType,\n          url: snapshot.metadata.fullPath \n        })\n        .then( () => {\n          console.log('File uploaded')\n        })\n        .catch( err => { console.log(err) })\n      }\n\n    })\n    .catch(err => {console.log(err)})\n  }\n  reader.readAsDataURL(fileObj)\n}\n\nexport async function downloadPostMedia(imgPaths){\n    return await Promise.all(imgPaths.map(imgObj => {\n      console.log(imgObj.get('path'))\n      return new Promise((res, rej) => {\n        storage.ref(imgObj.get('path')).getDownloadURL()\n        .then(url => {\n          console.log(url)\n          res(new Map([['path', imgObj.get('path')], ['url', url], ['type', imgObj.get('type')] ]))\n        }).catch(err => {rej(err)})\n      })\n    }))\n}\n\n\n/* not in use */\n\nexport function websiteImageUpload(title, file) {\n  const reader = new FileReader();  \n\n  let setNameDBRef = db.ref(`website/images`)\n  \n  reader.onload = (evt) => {\n    // Use Firebase API here to directly upload file?\n    storage.ref()\n    .child(`website/images/${title}`)\n    .put(file)\n    .then(snapshot => {\n      let stripped = snapshot.metadata.fullPath\n      .replace(new RegExp(/\\//, 'g'), \"\")\n      .replace(\".\", \"\")\n      \n      // see if image object exits, preserve original upload date\n      setNameDBRef.child(stripped)\n      .once('value')\n      .then( setNameImageSnapshot => {\n          let fmtDate =  null // preserve original date\n          if(setNameImageSnapshot.val()){\n            fmtDate = setNameImageSnapshot.val().date\n          }else{\n            const date = new Date()\n            const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'numeric', day: '2-digit' }) \n            const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat.formatToParts(date )  \n            fmtDate = `${year}/${month}/${day}` \n          }\n\n          setNameDBRef.child(stripped).set({\n            \"date\": fmtDate,\n            \"path\": snapshot.metadata.fullPath \n          })\n      } )\n\n    })\n    .catch(err => {console.log(err)})\n  }\n  reader.readAsDataURL(file)\n}\n\nexport async function downloadWebsiteImages(imgPaths){\n    return await Promise.all(imgPaths.map(imgObj => {\n      \n      return new Promise((res, rej) => {\n        storage.ref(imgObj.path).getDownloadURL()\n        .then(url => {\n          res(url)\n        }).catch(err => {rej(err)})\n      })\n    }))\n}\n\n/* not in use */\n\nfunction setThumbUploadHelper(setName, title, file){\n  /*\n    Uploads the file and file data to database \n  */\n\n  //upload \n  let thumbStorageRef = storage.ref().child(`thumbnails/${setName}/${title}`);\n  let setThumbDBRef = db.ref(`thumbnails/${setName}/`)\n\n  // store file data\n  thumbStorageRef.put(file)\n  .then(snapshot => {\n    let stripped = snapshot.metadata.fullPath.replace(new RegExp(/\\//, 'g'), \"\").replace(\".\", \"\")\n    /* key: value ------ stippped: fullPath ----- pathtoimg1: path/to/img1  */\n    setThumbDBRef.child(stripped).set(snapshot.metadata.fullPath)\n  })\n}\n\n/* checks if thumbnail exists */ \nexport function setThumbUpload(setName, title, file) {\n  const reader = new FileReader();  \n  /*\n    If setName exists, delete and upload if not just upload\n  */\n  let setThumbDBRef = db.ref(`thumbnails/${setName}/`)\n  \n  reader.onload = (evt) => {\n    setThumbDBRef.once(\"value\")\n    .then( ss => {\n      if(ss.exists()){\n          //delete\n          setThumbDBRef.remove()\n          .then(() => {\n            let thumbStorageRef = storage.ref(`thumbnails/${setName}`)\n            // Ensure all previous entries are deleted. Settings will not work because files names will be different.\n            thumbStorageRef.listAll()\n            .then((res) => {\n              res.items.forEach(item => {\n                item.delete()\n                .then(() => {\n                  // database entry is gone, remove file from storage\n                  setThumbUploadHelper(setName, title, file)\n                })\n                .catch(err => {console.log(err)})\n              })\n            })\n            .catch(err => {console.log(err)})\n          })\n          .catch(err => { console.log(err) })\n      }else{\n         setThumbUploadHelper(setName, title, file)\n      }\n    })\n  };\n  reader.readAsDataURL(file);\n}\n\nexport async function downloadSetThumbImage(setName){ \n  let thumbSnapshot = await db.ref(`thumbnails/${setName}`).once('value')\n  let thumbnailFullPath = Object.values(thumbSnapshot.val())[0]\n  return await storage.ref(thumbnailFullPath).getDownloadURL()\n}\n\n/* use img and throbber to create progress indicator */\nexport function setImageUpload(setName, title, file) {\n  const reader = new FileReader();  \n  let setNameDBRef = db.ref(`images/${setName}`)\n  reader.onload = (evt) => {\n    // Use Firebase API here to directly upload file\n    storage.ref().child(`images/${setName}/${title}`)\n    .put(file)\n    .then(snapshot => {\n      let stripped = snapshot.metadata.fullPath\n      .replace(new RegExp(/\\//, 'g'), \"\")\n      .replace(\".\", \"\")\n      // see if image object exits, preserve original upload date\n      setNameDBRef.child(stripped).once('value')\n      .then( setNameImageSnapshot => {\n          let fmtDate =  null\n          setNameImageSnapshot.val()\n          ? \n            fmtDate = setNameImageSnapshot.val().date\n          :\n            fmtDate = formatDate()\n          \n          setNameDBRef.child(stripped).set({\n            \"date\": fmtDate,\n            \"path\": snapshot.metadata.fullPath \n          })\n      } )\n    })\n    .catch(err => {console.log(err)})\n  };\n  reader.readAsDataURL(file);\n}\n\n/*\n  Given array of image paths, fetch image url from Firebase Storage using img path\n  Air Bnb doc\n  https://peterpalau.github.io/react-bnb-gallery/#/options\n  Firebase:\n    Data return alphabetically, so images are sorted by name by default\n*/\nexport async function downloadSetNameImages(imgPaths){\n  return await Promise\n  .all(imgPaths\n    .map((imgObj, i)=>{\n      return new Promise(\n        (res, rej) => {\n          console.log(imgObj.path)\n          storage.ref(imgObj.path).getDownloadURL()\n          .then(url => {\n            /* Image object doumented in react Air BnB Gallery */\n            res({\n              photo: url,\n              number: i,\n              caption: imgObj.path.split(\"/\").reverse()[0].split(\".\")[0],\n              subcaption: imgObj.date,\n              thumbnail: url\n            })\n          }).catch(err=>{rej(err)}) \n        }\n      )\n    })\n  )\n}","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent,\n\tListItem, List, ListItemText\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\nimport Chart from 'chart.js';\n\nimport {cvtTimetoInt, cvtIntToTime} from \"../utils/formatting\"\n// Stats\nimport {\n\tmean, median, standardDeviation\n}from 'simple-statistics'\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\nclass LineChart extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdataType: props.dataType,\n\t\t\tdata: props.data, // x y values for chart\n\t\t\tvalues: props.values, // raw score values\n\t\t\tstats: new Map() // mean, median, SD\n\t\t}\n\t}\n\n\t\n\tcomponentDidMount(){\n\n\t}\n\n\tcreateChart(){\n\t\tthis.ctx = document.getElementById('lineChart');\n\t\tconsole.log(this.state.data)\n\t\tthis.barChart = new Chart(this.ctx, {\n\t\t    type: 'line',\n\t\t    labels: [\"Scores\"],\n\t\t    data:  {\n\t\t\t    datasets: [{\n\t\t\t    \t'label': \"Score\",\n\t\t\t        barPercentage: 0.5,\n\t\t\t        barThickness: 6,\n\t\t\t        maxBarThickness: 8,\n\t\t\t        minBarLength: 2,\n\t\t\t        backgroundColor: this.props.theme.palette.primary.main,\n\t\t\t        data: this.state.data\n\t\t\t    }]\n\t\t\t},\n\t\t\toptions:{\n\t\t\t\tscales: {\n\t\t            yAxes: [{\n\t\t                ticks:{\n\t\t                \tcallback: function(label, index, labels) {\n\t\t\t                \treturn cvtIntToTime(label)\n\t\t\t                }\n\t\t\t             }\n\t\t            }]\n\t\t\t    },\n\t\t\t    tooltips: {\n\t\t\t        callbacks: {\n\t\t\t            label: function(tooltipItem, data) {\n\t\t\t                var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t                if (label) {\n\t\t\t                    label += ': ';\n\t\t\t                }\n\t\t\t                label += cvtIntToTime(tooltipItem.yLabel)\n\t\t\t                \n\t\t\t                return label;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    },\n\t\t\t\tmaintainAspectRatio: false\n\t\t\t},\n\t\t\tplugins: [{\n\t\t\t\tbeforeInit: function(chart) {\n\t\t\t\t\tvar chartData = chart.data.datasets[0].data\n\t\t\t\t\tconsole.log(chart.options.scales.yAxes)\n\n\t\t\t\t}\n\t\t\t}]\n\t\t});\n\n\n\t}\n    \n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps}, ()=>{\n\t\t\tthis.createChart()\n\t\t})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\t\n\t}\n\n\tobjListToArray(obj){\n\t\treturn Array.from(Object.entries(obj), entry => {\n\t\t\t return new Map(Object.entries(entry[1]));\n\t\t})\n\t}\n\n\t\n\n  render(){\n\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t \t\n\t\t\t<Paper elevation={2}> \n\t\t\t\t<canvas id=\"lineChart\" width=\"400\" height=\"400\"></canvas>\n\t\t\t</Paper>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default LineChart = withTheme(LineChart);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent,\n\tListItem, List, ListItemText\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\n// Stats\nimport {\n\tmean, median, standardDeviation\n}from 'simple-statistics'\n\nimport {cvtTimetoInt, cvtIntToTime} from \"../utils/formatting\"\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\nimport Chart from 'chart.js';\n\n\n\nvar db = firebase.database();\n\nclass BarChart extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdataType: props.dataType,\n\t\t\tdata: props.data, // x y values for chart\n\t\t\tvalues: props.values, // raw score values\n\t\t\tstats: new Map() // mean, median, SD\n\t\t}\n\t}\n\n\n\tcomponentDidMount(){\n    \t// fetch('https://vega.github.io/vega/examples/bar-chart.vg.json')\n     //  .then(res => res.json())\n     //  .then(spec => this.renderSpec(spec))\n     //  .catch(err => console.error(err));\n     \n\t}\n\n\tcreateChart([labels, data]){\n\t\tthis.ctx = document.getElementById('barChart');\n\t\tthis.barChart = new Chart(this.ctx, {\n\t\t    type: 'bar',\n\t\t    data:  {\n\t\t    \tlabels: labels,\n\t\t\t    datasets: [{\n\t\t\t    \t'label': \"Scores (Standard Deviation)\",\n\t\t\t        minBarLength: 1,\n\t\t\t        backgroundColor: this.props.theme.palette.primary.main,\n\t\t\t        data: data\n\t\t\t    }]\n\t\t\t},\n\t\t\toptions:{\n\t\t\t\tmaintainAspectRatio: false\n\t\t\t}\n\t\t});\n\n\n\t}\n\n   \n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({\n\t\t\t...newProps,\n\t\t}, () => {\n\t\t\tthis.createChart(this.binData(this.state.values))\n\t\t})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t}\n\n\tcreateLabels(_mean, sd){\n\t\tfunction _(x){\n\t\t\treturn x <= 0 ? 0 : cvtIntToTime(x)\n\t\t}\n\t\tlet bin1 = `${_(_mean - (sd * 3))} - ${_(_mean - (sd * 2))}`\n\t\tlet bin2 = `${_(_mean - (sd * 2))} - ${_(_mean - (sd * 1))}`\n\t\tlet bin3 = `${_(_mean - (sd * 1))} - ${_(_mean - (sd * 0))}`\n\t\tlet bin4 = `${_(_mean + (sd * 0))} - ${_(_mean + (sd * 1))}`\n\t\tlet bin5 = `${_(_mean + (sd * 1))} - ${_(_mean + (sd * 2))}`\n\t\tlet bin6 = `${_(_mean + (sd * 2))} - ${_(_mean + (sd * 3))}`\n\n\t\t\n\t\treturn [bin1, bin2, bin3, bin4, bin5, bin6]\n\t}\n\n\tbinData(values){\n\t\t// {x: binValue, y: countOfbin}\n\t\t// 6 bins 1,2,3 SD from Mean each way\n\t\tlet sd = standardDeviation(values)\n\t\tlet _mean = mean(values)\n\t\n\t\t\n\t\tlet labels = this.createLabels(_mean, sd)\n\t\tlet binnedData = [0, 0, 0, 0, 0, 0]\n\n\n\t\t for(let x of values){\n\t\t \t\tlet diff = (x - _mean) // 11 - 10 => 1\n\t\t \t\tlet numSDAway = Math.floor(diff / sd) // 5 / 2 => .5 => 0\n\t\t \t\tconsole.log(`SD: ${sd}, x: ${x}, mean: ${_mean} Diff: ${diff}, sdAway: ${numSDAway}`)\n\t\t \t\tif(Math.abs(numSDAway) == 1){\n\t\t \t\t\tif(diff > 0){\n\t\t \t\t\t\tbinnedData[3]++\n\t\t \t\t\t}else{\n\t\t \t\t\t\tbinnedData[2]++\n\t\t \t\t\t}\n\t\t \t\t}else if(Math.abs(numSDAway) == 2){\n\t\t \t\t\tif(diff > 0){\n\t\t \t\t\t\tbinnedData[4]++\n\t\t \t\t\t}else{\n\t\t \t\t\t\tbinnedData[1]++\n\t\t \t\t\t}\n\t\t \t\t} else{\n\t\t \t\t\tif(diff > 0){\n\t\t \t\t\t\tbinnedData[5]++\n\t\t \t\t\t}else{\n\t\t \t\t\t\tbinnedData[0]++\n\t\t \t\t\t}\n\t\t \t\t}\n\t\t }\n\t\t \n\t\t return [labels, binnedData]\n\t}\n\n  render(){\n\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t \t\n\t\t\t<div stlye={{width: \"100%\"}}>\n\t\t\t\t\n\t\t\t\t<canvas id=\"barChart\" width=\"400\" height=\"400\"></canvas>\n\t\t\t</div>\n\t\t\t\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default BarChart = withTheme(BarChart);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \nimport vega from \"vega-statistics\"\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent,\n\tListItem, List, ListItemText\n} \nfrom '@material-ui/core';\n\nimport {\n\tmean, median, standardDeviation\n}from 'simple-statistics'\n\nimport LineChart from \"../comps/lineChart\"\nimport BarChart from \"../comps/barChart\"\n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport {cvtTimetoInt, cvtIntToTime} from \"../utils/formatting\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\nclass ScoreDataView extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\twodID: props.wodID,\n\t\t\tscores: new Array(),\n\t\t\trawScores: new Array(),\n\t\t\tdataType: \"\",\n\t\t\tstats: new Map()\n\t\t}\n\t}\n\n\tgetRawScores(arr){\n\t\treturn arr.map(score => {\n\t\t\treturn score.get(\"score\")\n\t\t})\n\t}\n\n\n\n\tcomponentDidMount(){\n\t\tlet scoresPath = `scores/${this.state.wodID}`\n\t\tthis.scoreListener  = db.ref(scoresPath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tlet [scores, rawScores, scoreType] = this.getData(ss.val())\n\t\t\t\tlet stats = this.getDescStats(rawScores)\n\t\t\t\tconsole.log(stats)\n\t\t\t\tthis.setState({\n\t\t\t\t\tscores: scores, \n\t\t\t\t\trawScores: rawScores, \n\t\t\t\t\tdataType: scoreType, \n\t\t\t\t\tstats: stats\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\t\n\t}\n\n\n\tgetData(obj){\n\t\t// create two arrays\n\t\t// One for data display in graph, \n\t\t//\t\t[ {\"category\": \"A\", \"amount\": 28}, ... ]\n\t\t// Second to crunch data, raw values\n\t\t/*\n\t\t\t\tkey\t\t\t(uid)\n\t\t\t\tboxID: \t\t\"-MMVcVjihF2bXFc6qIEp\"\n\t\t\t\tscore:  \t\"321\"\n\t\t\t\tusername:  \t\"TestOwner\"\n\t\t\t\twodID:  \t\"-MMjP1_MQH23dnFQOfjR\"\n\t\t*/\n\t\tlet data = []\n\t\tlet values = []\n\t\tlet scoreType = \"\"\n\n\t\t// extract scores form obj and convert time to integer of seconds\n\t\tfor(let item of Object.values(obj)){\n\t\t\tvalues.push(cvtTimetoInt(item.score))\n\t\t\tscoreType = item.scoreType\n\t\t}\n\n\t\t// sort scores\n\t\tvalues.sort((x,y) => {\n\t\t\tif(scoreType === \"time\"){\n\t\t\t\treturn x - y\n\t\t\t}else if(scoreType === \"reps\"){\n\t\t\t\treturn this.cvtReps(x) - this.cvtReps(y)\n\t\t\t}\n\t\t\treturn 1\n\t\t})\n\n\t\t// create data list for chart \n\t\tfor(let i =0; i < values.length; i++){\n\t\t\t data.push({\"x\": i, \"y\": values[i], \"c\": 0})\n\t\t}\n\t\treturn [data, values, scoreType]\n\t}\n\n\t getDescStats(vals){\n\t\tlet stats = [\n\t\t\t['min', Math.min(...vals)],\n\t\t\t['max', Math.max(...vals)],\n\t\t\t['mean', mean(vals)],\n\t\t\t['median', median(vals)],\n\t\t\t['sd', standardDeviation(vals)]\n\t\t]\n\t\treturn new Map(stats)\n    }\n\t\n\n  render(){\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t\t<Paper>\n\t\t\t\t<Typography>Low: {cvtIntToTime(this.state.stats.get(\"min\"))}</Typography>\n\t\t\t\t<Typography>High: {cvtIntToTime(this.state.stats.get(\"max\"))}</Typography>\n\t\t\t</Paper>\n\t\t\t<Paper elevation={2}> \n\t\t\t\t<LineChart \n\t\t\t\t\tdata = {this.state.scores}\n\t\t\t\t\tvalues={this.state.rawScores}\n\t\t\t\t\tdataType={this.state.dataType} />\n\n\t\t\t\t<BarChart \n\t\t\t\t\tdata = {this.state.scores}\n\t\t\t\t\tvalues={this.state.rawScores}\n\t\t\t\t\tdataType={this.state.dataType} />\n\t\t\t</Paper>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default ScoreDataView = withTheme(ScoreDataView);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent,\n\tListItem, List, ListItemText\n} \nfrom '@material-ui/core';\n\nimport ScoreDataView from \"../comps/scoreDataView\" \n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n/*\nShow details of Box and its WODS\n*/\nfunction Score(props){\n\tlet score = props.info.get(\"score\")\n\tlet username = props.info.get(\"username\")\n\t\n\treturn(\n\t\t<ListItem>\n\t\t\t<ListItemText primary={username}/>\n\t\t\t<ListItemText primary={score}/>\n\t\t</ListItem>\n\t)\n}\n\nclass ScoreView extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tlet wodID = props.wodMD.get(\"wodID\")\n\t\tthis.state = {\n\t\t\tuserMD: props.userMD,\n\t\t\twodID: wodID,\n\t\t\twodMD: props.wodMD,\n\t\t\tscores: new Array()\n\t\t}\n\t}\n\n\n\tcomponentDidMount(){\n\t\tlet scorePath = `scores/${this.state.wodID}`\n\t\tthis.scoreListener  = db.ref(scorePath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tthis.setState({scores: this.objListToArray(ss.val())})\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\tthis.scoreListener()\n\t}\n\n\tobjListToArray(obj){\n\t\treturn Array.from(Object.entries(obj), entry => {\n\t\t\t return new Map(Object.entries(entry[1]));\n\t\t})\n\t}\n\n\thandleAddScore(){\n\t\tif(!this.state.userMD){return}\n\t\tlet userScore =  document.getElementById(\"scoreViewUserScore\").value\n\t\tlet username = this.state.userMD.username\n\t\tlet uid = this.state.userMD.uid\n\t\t\n\n\t\tlet path = `scores/${this.state.wodID}/${uid}`\n\t\tconsole.log(username, userScore, uid)\n\t\tdb.ref(path).set({\n\t\t\tusername: username,\n\t\t\tscore: userScore,\n\t\t\twodID: this.state.wodMD.get(\"wodID\"),\n\t\t\tboxID: this.state.wodMD.get(\"boxID\"),\n\t\t\tscoreType: this.state.wodMD.get(\"scoreType\")\n\t\t})\n\t}\n\n  render(){\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t<Grid item xs={12}>\n\t\t\t<Typography>{this.state.wodMD.get(\"title\")}</Typography>\n\t\t\t<Typography>{this.state.wodMD.get(\"scoreType\")}</Typography>\n\t\t\t<Typography>{this.state.wodMD.get(\"wodText\")}</Typography>\n\t\t</Grid>\n\n\n\n\t\t<Grid item xs={12}>\n\t\t\t<Accordion>\n\t\t\t\t<AccordionSummary\n\t\t\t\t\tstyle={{background: this.props.theme.palette.primary.main}}\n\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\taria-label=\"Expand\"\n\t\t\t\t\taria-controls=\"additional-actions2-content\"\n\t\t\t\t\tid=\"additional-actions2-header\">\n\t\t\t\t\t<Typography >\n\t\t\t\t\t\tAdd Score\n\t\t\t\t\t</Typography>\t        \n\t\t\t\t</AccordionSummary>\n\t\t\t\t<AccordionDetails>\n\t\t\t\t\t<Typography>{this.state.wodMD.get(\"scoreType\")}</Typography>\n\t\t\t\t\t<TextField\n\t\t              id=\"scoreViewUserScore\"\n\t\t              type=\"text\"\n\t\t              style={{ margin: 8}}\n\t\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t\t              inputProps={{\n\t\t                title: \"Letters only, max length 35\",\n\t\t                placeholder: \"Score\"\n\t\t              }}\n\t\t              margin=\"normal\"\n\t\t              color=\"primary\"\n\t\t              InputLabelProps={{\n\t\t                shrink: true,\n\t\t              }}\n\t\t            />\n\t\t            <Button variant=\"outline\" color=\"primary\" onClick={this.handleAddScore.bind(this)}>Add</Button>\n\n\n\t\t\t\t</AccordionDetails>\n\t\t\t</Accordion>\t\t\n\t\t</Grid>\n\t\t<Grid item xs={12}>\n\t\t\t<ScoreDataView \n\t\t\t\twodID={this.state.wodMD.get(\"wodID\")} \n\t\t\t/>\n\t\t</Grid>\n\t\t<Grid item xs={12}>\n\t\t\t<Paper>\n\t\t\t{this.state.scores.length > 0\n\t\t\t?\n\t\t\t\t<List>\n\t\t\t\t\t{\n\t\t\t\t\tthis.state.scores.map(score => {\n\t\t\t\t\t\treturn <Score info={score} />\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t    </List>\n\t\t\t:\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Card variant=\"outlined\" color=\"primary\">\n\t\t\t\t\t  <CardContent>\n\t\t\t\t\t    <Typography variant=\"h5\" component=\"h2\"gutterBottom>\n\t\t\t\t\t   \tNo Scores!\n\t\t\t\t\t    </Typography>\n\t\t\t\t\t   </CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Grid>\n\t\t\t}\n\t\t\t</Paper>\n\t\t</Grid>\n\t\t<Grid item xs={12} align=\"center\">\n\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={()=>{this.props.handleBack()}}>Back</Button>\n\t\t</Grid>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default ScoreView = withTheme(ScoreView);\n\n","// Firebase\nimport firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n// React\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\n\n// Material UI\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress, CardActions, Card, CardContent\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\n\n\n// WodTrackrr\nimport ScoreView from \"../comps/scoreView\"\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n/*\nShow details of Box and its WODS\n*/\nfunction Wod(props){\n\tlet title = props.info.get(\"title\")\n\tlet scoreType = props.info.get(\"scoreType\")\n\tlet wodText = props.info.get(\"wodText\")\n\t\n\treturn(\n\t\t<Grid item xs={4}>\n\t\t<Card variant=\"outlined\" color=\"primary\">\n\t\t  <CardContent>\n\t\t    <Typography variant=\"h5\" component=\"h2\"gutterBottom>\n\t\t      {title}\n\t\t    </Typography>\n\t\t    <Typography color=\"textSecondary\" >\n\t\t      {scoreType}\n\t\t    </Typography>\n\t\t    <Typography color=\"textSecondary\">\n\t\t      {wodText}\n\t\t    </Typography>\n\t\t  </CardContent>\n\t\t  <CardActions>\n\t\t  \t<Grid item align=\"center\" xs={12}>\n\t\t    <Button size=\"small\" \n\t\t    \tcolor=\"primary\" \n\t\t    \tonClick={() => props.handleScoreView(props.info)}>\n\t\t    \tView Scores\n\t\t    </Button>\n\t\t    </Grid>\n\t\t  </CardActions>\n\t\t</Card>\n\t\t</Grid>\n\t)\n}\n\nclass BoxView extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t  userMD: props.userMD,\n\t\t  boxID: props.boxID,\n\t\t  boxMD: new Map(),\n\t\t  wods: new Array(),\n\t\t  showWodList: true,\n\t\t  currentWodID: \"\",\n\t\t  currentWodMD: new Map()\n\t\t}\n\t}\n\n\n\tcomponentDidMount(){\n\t\tlet boxPath = `boxes/${this.props.boxID}`\n\t\tlet wodPath = `wods/${this.props.boxID}`\n\t\tthis.boxListener  = db.ref(boxPath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tthis.setState({boxMD: new Map(Object.entries(ss.val()))})\n\t\t\t}\n\t\t})\n\t\tthis.wodListener  = db.ref(wodPath).on(\"value\", ss => {\n\t\t\tif(ss && ss.exists()){\n\t\t\t\tthis.setState({wods: this.objListToArray(ss.val())})\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentWillReceiveProps(newProps){\n\t\tthis.setState({...newProps})\n\t}\n\n\tcomponentWillUnmount(){\n\t\tconsole.log(\"Component will unmount\")\n\t\tthis.wodListener()\n\t\tthis.boxListener()\n\t}\n\n\tobjListToArray(obj){\n\t\treturn Array.from(Object.entries(obj), entry => {\n\t\t\t return new Map(Object.entries(entry[1]));\n\t\t})\n\t}\n\n\thandleScoreView(wodMD){\n\t\tthis.setState({showWodList: false, currentWodMD: wodMD})\n\t}\n\n\thandleBack(){\n\t\tthis.setState({showWodList: true})\n\t}\n\n\n\n  render(){\n\treturn(\n\t\t<Grid item xs={12}>\n\t\t<Paper elevation={2}>\n\t\t\t<Typography align=\"center\" variant=\"h3\">{this.state.boxMD.get(\"title\")}</Typography>\n\n\n\t\t\t{this.state.showWodList\n\t\t\t?\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Typography variant=\"h4\">Wods</Typography>\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t{this.state.wods.length > 0\n\t\t\t\t\t?\n\t\t\t\t\t\tthis.state.wods.map(wod => {\n\t\t\t\t\t\t\treturn <Wod handleScoreView={this.handleScoreView.bind(this)} info={wod} />\n\t\t\t\t\t\t})\n\t\t\t\t\t:\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Card variant=\"outlined\" color=\"primary\">\n\t\t\t\t\t\t\t  <CardContent>\n\t\t\t\t\t\t\t    <Typography variant=\"h5\" component=\"h2\"gutterBottom>\n\t\t\t\t\t\t\t   \tNo Wods!\n\t\t\t\t\t\t\t    </Typography>\n\t\t\t\t\t\t\t   </CardContent>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t\t</React.Fragment>\n\t\t\t:\n\t\t\t\t<ScoreView \n\t\t\t\t\tuserMD={this.state.userMD}\n\t\t\t\t\twodMD={this.state.currentWodMD} \n\t\t\t\t\thandleBack={this.handleBack.bind(this)}/>\n\n\t\t\t}\n\t\t</Paper>\n\n\n\n\t\t<Grid item xs={12} align=\"center\">\n\t\t\t<Button variant=\"outlined\" color=\"secondary\" onClick={()=>{this.props.handleBack()}}>Back</Button>\n\t\t</Grid>\n\t\t</Grid>\n\t)\n  }\n}\n\n\n\n\n  \nexport default BoxView = withTheme(BoxView);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\n\nimport \n{Grid, Paper, Button, Typography, Collapse, IconButton, TextField,\nInputBase, InputAdornment,  }\nfrom '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport BoxView from \"../comps/boxView\" \n\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\nvar db = firebase.database();\n\n\nfunction Box(props){\n  let title = props.info.get(\"title\")\n  let boxID = props.info.get(\"boxID\")\n  console.log(props.color)\n  return(\n    <Grid item xs={12}>\n      <Paper>\n        <Grid container itemxs={12}>\n        <Grid item xs={10}>\n          <Typography align=\"left\" style={{padding: \"2.5vw\"}} variant=\"body1\">\n            {title}\n          </Typography>\n        </Grid>\n\n        <Grid container item xs={2} align=\"center\" alignItems='center'>\n          <Button \n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={()=>{props.handleBoxView(boxID)}}>\n              View\n            </Button>\n        </Grid>\n      </Grid>\n      </Paper>\n    </Grid>)\n}\n\n\n\n\nclass BoxSearch extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      allBoxes: new Array(),\n      filteredBoxes: new Array()\n    }  \n  }\n\n  objectsToArray(obj){\n    return Array.from(Object.entries(obj), entry => {\n       return new Map(Object.entries(entry[1]));\n    })\n  }\n\n  componentDidMount(){\n    this.allBoxesListener = db.ref(\"boxes\")\n    .on('value', ss => {\n      if(ss && ss.exists()){\n        let arr = this.objectsToArray(ss.val())\n        arr.sort((x, y) => {return x.get(\"title\").toLowerCase() > y.get(\"title\").toLowerCase() ? -1 : 1})\n        this.setState({\n          allBoxes: arr,\n          filteredBoxes: arr\n        })\n      }\n    })\n  }\n\n  \n  componentWillUnmount(){\n    if(this.allBoxesListener !== undefined){\n      this.allBoxesListener()\n    }\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n  onKeyUp(data){\n    if((data.keyCode || data.which) == 13){\n        \n    }\n  }\n\n  onChange(ev){\n    let val = ev.target.value\n    console.log(val)\n    let filteredBoxes = this.state.allBoxes.filter(box =>{\n      return box.get(\"title\").toLowerCase().includes(val.toLowerCase())\n    })\n\n    this.setState({filteredBoxes: filteredBoxes})\n  }\n\n  render () {\n    return (\n      <Grid item xs={12} >\n      <Paper elevation={2} component=\"form\">\n  \n       <TextField\n       fullWidth\n        variant=\"outlined\"\n        onKeyUp={this.onKeyUp.bind(this)}\n        onChange={this.onChange.bind(this)}\n        placeholder=\"Search Boxes\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon color=\"primary\" />\n            </InputAdornment>\n          ),\n        }}\n      />\n      \n      \n      \n      </Paper>\n      <Grid item xs={12}>\n        {\n          this.state.filteredBoxes.map((box, i) => {\n            return <Box \n                    key={i} \n                    info={box} \n                    color={this.props.theme.palette.primary.mainGrad}\n                    handleBoxView={this.props.handleBoxView}/>\n          })\n        }\n      </Grid>\n      </Grid>\n    );\n  }\n}\n\n\nclass BoxSearchPage extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      showBoxView: false,\n      currentBoxID: null\n    }  \n  }\n\n\n  componentDidMount(){\n   \n  }\n\n  \n  componentWillUnmount(){\n    \n  }\n\n  handleBoxView(boxID){\n    console.log(`Show details for: ${boxID}`)\n    this.setState({showBoxView: true, currentBoxID: boxID})\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n  handleBack(){\n    this.setState({showBoxView: false})\n  }\n\n\n  render () {\n    return (\n    \t<Grid item xs={12} >\n      {!this.state.showBoxView\n        ?\n        <BoxSearch \n            theme={this.props.theme}\n            handleBoxView={this.handleBoxView.bind(this)} />\n        :\n        \n        <BoxView userMD={this.state.userMD} handleBack={this.handleBack.bind(this)} boxID={this.state.currentBoxID} />\n\n      }\n      }\n  \t\t</Grid>\n    )\n  }\n}\nexport default BoxSearchPage = withTheme(BoxSearchPage);\n","import React, { Component } from 'react'\nimport postData from \"../utils/api\"\nimport { Grid, TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n// Add the Firebase services that you want to use\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\"; \n\nimport \"../css/login.css\"\nimport \"../styles.css\"\n\n\nexport default class Login extends Component {\n  \n  handleSubmit(ev){\n    let email = document.getElementById('email')\n\n    let pass1 = document.getElementById('password')\n    let pass2 = document.getElementById('passwordConfirm')\n    \n    console.log(email.value, pass1)\n  \n    firebase.auth().signInWithEmailAndPassword(email.value, pass1.value)\n    .then(res=>{\n      console.log(\"Firebase res\")\n      console.log(res)\n      this.props.onLogin(res.user)\n    })\n    .catch(function(error) {\n      console.log(error)\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // ...\n    });\n  }\n\n  // <!-- TODO: Add SDKs for Firebase products that you want to use\n  //      https://firebase.google.com/docs/web/setup#available-libraries -->\n\n  render () {\n    return (\n      <Grid container id=\"login\" align=\"center\" justify=\"center\">\n        <br />\n        <Grid item xs={12} >\n          <Paper elevation=\"2\">\n            <Typography variant=\"h4\">\n              Login\n            </Typography>\n          \n            <br />\n        \n            <TextField\n            id=\"email\"\n            style={{ margin: 8 }}\n            placeholder=\"Email\"\n            margin=\"normal\"\n            InputLabelProps={{\n            shrink: true,\n            }}\n            /><br /><br />\n            <TextField\n            id=\"password\"\n            type=\"password\"\n            style={{ margin: 8 }}\n            placeholder=\"Passowrd\"\n            margin=\"normal\"\n            InputLabelProps={{\n            shrink: true,\n            }}\n            />\n            <br/><br/>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} >\n          <Paper elevation=\"2\">\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit.bind(this)}>\n              Login\n            </Button>\n            <Link to=\"/register\" className=\"no-line\" style={{'padding-left': '10px'}}>\n              <Button variant=\"outlined\" color=\"secondary\" >\n                Register\n              </Button>\n            </Link>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress\n} \nfrom '@material-ui/core';\n\nimport BoxView from \"../comps/boxView\" \n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n/*\nAccordion to toggle between list of boxes and the box view component\n**box view compnent will be sued in search as well\n\n\n*/\n\n\nclass BoxListAccordion extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      userBoxes: props.userBoxes,\n      hasBoxes: props.hasBoxes,\n      showBoxList: true,\n      currentBoxID: \"\"\n    }\n  }\n\n\n  componentDidMount(){\n  \n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n  componentWillUnmount(){\n  \tconsole.log(\"Component will unmount\")\n  }\n\n  handleBoxView(boxID){\n  \tconsole.log(\"Show boxView for: \", boxID)\n\n  \tthis.setState({showBoxList: false, currentBoxID: boxID})\n  }\n\n  handleBack(){\n  \tthis.setState({showBoxList: true})\n  }\n\n  render(){\n\treturn(\n\t<Accordion>\n\t\t<AccordionSummary\n\t\tstyle={{background: this.props.theme.palette.primary.main}}\n\t\texpandIcon={<ExpandMoreIcon />}\n\t\taria-label=\"Expand\"\n\t\taria-controls=\"additional-actions2-content\"\n\t\tid=\"additional-actions2-header\"\n\t\t>\n\t\t\t<Typography >\n\t\t\tBoxes and Wods\n\t\t\t</Typography>\t        \n\t\t</AccordionSummary>\n\t\t<AccordionDetails>\n\t\t{this.state.showBoxList\n\t\t?\n\t\t\t<Grid container >\n\t\t\t\t<Grid container  item={12}>\n\t\t\t\t{this.state.userBoxes.length > 0\n\t\t\t\t?\n\t\t\t\t\tthis.state.userBoxes\n\t\t\t\t\t.map((box, i) => {\n\t\t\t\t\treturn (<Box key={i} handleBoxView={this.handleBoxView.bind(this)} info={box} />)\n\t\t\t\t\t})\n\t\t\t\t:\n\t\t\t\t<Grid item zeroMinWidth xs={6}>\n\t\t\t\t\t<Paper elevation={4} style={{padding: \"1vw\"}}>\n\t\t\t\t\t\t<Typography noWrap align=\"left\">No boxes Found!</Typography>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t:\n\t\t\t<BoxView handleBack={this.handleBack.bind(this)} boxID={this.state.currentBoxID} />\n\n\t\t}\n\n\t\t\n\t\t</AccordionDetails>\n\t</Accordion>\t\t\n\t)\n  }\n}\n\n\nfunction Box(props){\n\tconsole.log(props.info.get(\"title\"))\n\tlet title = props.info.get(\"title\")\n\tlet boxID = props.info.get(\"boxID\")\n\treturn(\n\t<Grid item zeroMinWidth xs={6}>\n\t<Paper elevation={4} style={{padding: \"1vw\"}}>\n\t\t<Typography noWrap align=\"left\">Title: {title}</Typography>\n\t\t<Typography  noWrap align=\"left\">Id: {boxID}</Typography>\n\t\t<Button variant=\"outlined\" color=\"primary\" onClick={()=>{props.handleBoxView(boxID)}}>View</Button>\n\t</Paper>\n\t</Grid>)\n}\n\n  \nexport default BoxListAccordion = withTheme(BoxListAccordion);\n\n","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport \n{ \tGrid, Paper, Button, Typography, Collapse, TextField, Select,\n\tAccordion, AccordionSummary, AccordionDetails, FormControlLabel,\n\tCircularProgress, LinearProgress\n} \nfrom '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\nimport { withTheme } from '@material-ui/core/styles';\n\n\nimport BoxListAccordion from \"../comps/boxListAccordion\"\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\nvar db = firebase.database();\n\n\n\n/*\nAccordion for:\nAdd Box\nShow Boxes\n\n\n*/\n\n\n\n\n\n\n\nclass OwnerBox extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD,\n      userBoxes: new Array(),\n      hasBoxes: false,\n      addBoxProgress: true,\n      scoreTypeSelectVal: \"\",\n      boxIDSelectVal: \"\"\n    }\n  }\n  \n\n  getArrayOfBoxes(boxObj){\n  \treturn Array.from(Object.entries(boxObj), entry => {\n  \t\t return new Map(Object.entries(entry[1]));\n  \t})\n  }\n\n  listenForBoxes(){\n  \tif(this.state.user === null){return}\n  \tconsole.log(\"Listening for boxes\")\n  \t// if listner has been set, dont reset it\n  \tlet path = `users/${this.state.user.uid}/boxes`\n  \t\n  \tthis.boxListener = db.ref(path).on('value', ss => {\n  \t\tif(ss != null && ss.exists()){\n\t  \t\tconsole.log(\"Snapshot:\")\n\t  \t\tconsole.log(ss.val())\n  \t\t\tthis.updateState({hasBoxes: true, userBoxes: this.getArrayOfBoxes(ss.val())})\n  \t\t\t\n\n  \t\t}\n  \t})\n  }\n\n  updateState(newState){\n  \tconsole.log(\"Seeting state\")\n  \tconsole.log(newState)\n  \tthis.setState({...newState})\n  }\n\n  componentDidMount(){\n  \tthis.listenForBoxes()\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n    if(newProps.userMD.accountType === \"owner\"){\n    \tthis.listenForBoxes()\n    }\n  }\n\n  componentWillUnmount(){\n  \tconsole.log(\"Component will Unmounting\")\n  \tif(this.boxListener !== undefined){\n  \t\tconsole.log(\"Unmounting OwnerBox\")\n    \tthis.boxListener()\n  \t}\n  }\n\n  onKeyUp(data){\n    if((data.keyCode || data.which) == 13){\n        let a = document.getElementById(\"ownerBoxAddBoxTitle\")\n        let title = a.value\n        this.setState({showAddBoxProgress: true})\n        this.createBox(title)\n    }\n  }\n\n  createWOD(){\n  \tlet boxID = document.getElementById(\"ownerBoxAddWodBoxID\").value\n  \tlet title = document.getElementById(\"ownerBoxAddWodTitle\").value\n  \tlet scoreType = document.getElementById(\"ownerBoxAddWodScoreType\").value\n  \tlet wodText = document.getElementById(\"ownerBoxAddWodWodText\").value\n\n  \tif(!boxID || !title || !scoreType || !wodText){\n  \t\tconsole.log(\"Error with input createWod\")\n  \t\tconsole.log(boxID, title, scoreType, wodText)\n  \t\treturn\n  \t}\n\n  \tlet wodBoxPath = `wods/${boxID}`\n\tlet wodID = db.ref(wodBoxPath).push().key\n\tlet wodPath = `${wodBoxPath}/${wodID}`\n\n\tdb.ref(wodPath).set({\n\t\tboxID: boxID,\n\t\twodID: wodID,\n\t\ttitle: title,\n\t\tscoreType: scoreType,\n\t\twodText: wodText\n\t})\n  }\n\n  createBox(title){\n  \tlet boxNamesTitle = `boxNames/${title}`\n  \tlet userBoxes = `users/${this.props.user.uid}/boxes`\n  \tlet boxes = `boxes`\n\n\tdb.ref(boxNamesTitle).once(\"value\", ss =>{\n\t\tif(ss.exists()){\n\t\t\talert(\"Title is taken\")\n\t\t}else{\n\t\t\tconsole.log(\"Adding box data\")\n\t\t\tlet boxID = db.ref(boxes).push().key\n\t\t\tlet boxData = {\n\t\t\t\ttitle: title,\n\t\t\t\townerUID: this.props.user.uid,\n\t\t\t\tboxID: boxID\n\t\t\t}\n\n\t\t\t// add to list of all boxes\n\t\t\tdb.ref(`${boxes}/${boxID}`).set(boxData)\n\t\t\t// add to list of boxNames\n\t\t\tdb.ref(boxNamesTitle).set(boxData)\n\t\t\t// add to users list of boxes\n\t\t\tdb.ref(`${userBoxes}/${boxID}`).set(boxData)\n\t\t\tthis.setState({showAddBoxProgress: false})\n\t\t}\n\t})\n  }\n\n\n\n  handleSelectValChange(ev){\n\tconst name = ev.target.name;\n\tconsole.log(name)\n    this.setState({\n      [name]: ev.target.value\n  \t})\n  }\n \n  render () {\n    return (\n    \t<Grid item xs={12} id=\"ownerBox\">\n\t\t\t<Typography variant=\"h3\">\n\t\t\t\tWelcome, {this.state.userMD.accountType}!\n\t\t\t</Typography>\n\t\n\t\t\t<Accordion>\n\t        <AccordionSummary\n\t\t\t  style={{background: this.props.theme.palette.primary.mainGrad}}\n\t          expandIcon={<ExpandMoreIcon />}\n\t          aria-label=\"Expand\"\n\t          aria-controls=\"additional-actions0-content\"\n\t          id=\"additional-actions0-header\"\n\t        >\n        \t<Typography >\n        \t\tAdd WOD\n        \t</Typography>\t        \n\t        </AccordionSummary>\n\t        <AccordionDetails>\n\t          <Select\n\t\t          native\n\t\t          inputProps={{\n\t\t            name: 'Box',\n\t\t            id: 'ownerBoxAddWodBoxID',\n\t\t          }}>\n\t\t          <option aria-label=\"None\" value=\"\" />\n\t\t          {\n\t\t          \tthis.state.hasBoxes\n\t\t          \t?\n\t\t          \tthis.state.userBoxes\n\t        \t\t.map((box, i) => {\n\t\t        \t\treturn (<option key={i} value={box.get(\"boxID\")} >{box.get(\"title\")}</option>)\n\t\t        \t})\n\t\t        \t:\n\t\t        \t<React.Fragment></React.Fragment>\n\t\t          }\n\t\t      </Select>\n\t          <TextField\n\t              id=\"ownerBoxAddWodTitle\"\n\t              type=\"text\"\n\t              style={{ margin: 8}}\n\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t              inputProps={{\n\t                title: \"Letters only, max length 35\",\n\t                placeholder: \"Title\"\n\t              }}\n\t              margin=\"normal\"\n\t              color=\"primary\"\n\t              InputLabelProps={{\n\t                shrink: true,\n\t              }}\n\t            />\n\t             <TextField\n\t              id=\"ownerBoxAddWodWodText\"\n\t              type=\"text\"\n\t              style={{ margin: 8}}\n\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t              inputProps={{\n\t                title: \"Letters only, max length 35\",\n\t                placeholder: \"Workout here\"\n\t              }}\n\t              margin=\"normal\"\n\t              color=\"primary\"\n\t              InputLabelProps={{\n\t                shrink: true,\n\t              }}\n\t            />\n\t            <Select\n\t\t          native\n\t\t          \n\t\t          inputProps={{\n\t\t            name: 'Score Type',\n\t\t            id: 'ownerBoxAddWodScoreType',\n\t\t          }}\n\t\t        >\n\t\t          <option aria-label=\"None\" value=\"\" />\n\t\t          <option value={\"time\"}>Time</option>\n\t\t          <option value={\"reps\"}>Reps</option>\n\t\t      </Select>\n\t\t      <Button variant=\"outlined\" onClick={this.createWOD.bind(this)}>\n\t\t      \tEnter WOD\n\t\t      </Button>\n\t        </AccordionDetails>\n\t\t    </Accordion>\n\n\n\t\t\t<Accordion>\n\t\t        <AccordionSummary\n\t\t\t\t  style={{background: this.props.theme.palette.primary.mainGrad}}\n\t\t          expandIcon={<ExpandMoreIcon />}\n\t\t          aria-label=\"Expand\"\n\t\t          aria-controls=\"additional-actions1-content\"\n\t\t          id=\"additional-actions1-header\"\n\t\t        >\n\t\t        \t<Typography >\n\t\t        \t\tAdd Box\n\t\t        \t</Typography>\t        \n\t\t        </AccordionSummary>\n\t\t        <AccordionDetails>\n\t\t          <TextField\n\t\t              id=\"ownerBoxAddBoxTitle\"\n\t\t              type=\"text\"\n\t\t              style={{ margin: 8}}\n\t\t              pattern=\"[\\sA-Za-z0-9]{35}\"\n\t\t              inputProps={{\n\t\t                title: \"Letters only, max length 35\",\n\t\t                placeholder: \"Name of box\"\n\t\t              }}\n\t\t              onKeyUp={this.onKeyUp.bind(this) }\n\t\t              margin=\"normal\"\n\t\t              color=\"primary\"\n\t\t              InputLabelProps={{\n\t\t                shrink: true,\n\t\t              }}\n\t\t            />\n\t\t            {this.state.showAddBoxProgress\n\t\t            ?\n\t\t            \t<LinearProgress  color=\"secondary\"/>\t\n\t\t            :\n\t\t            \t<React.Fragment></React.Fragment>\n\t\t            }\n\t\t        </AccordionDetails>\n\t\t    </Accordion>\n\n\t\t  \t<BoxListAccordion \n\t\t  \t\tuser = {this.state.user}\n\t\t\t\tuserMD = {this.state.userMD}\n\t\t\t\tuserBoxes = {this.state.userBoxes}\n\t\t\t\thasBoxes = {this.state.hasBoxes}\n\t\t  \t/>\n\t\t  \n    \t\n  \t\t</Grid>\n    );\n  }\n}\n\n\n\n\nexport default OwnerBox = withTheme(OwnerBox);","// Add the Firebase services that you want to use\nimport firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\"; \nimport \"firebase/database\"; \n\nimport React, { Component } from 'react'\nimport { Grid, TextField, Button, Typography } from '@material-ui/core';\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\nvar db = firebase.database();\n\nconst usernameMaxLength = 12\nconst usernameMaxLengthErrMsg = \"Username cannot be longer than 12 characters\"\nconst usernameErrMsg = \"Username can only contain letters & numbers\" \n\n\nexport default class UsernamePanel extends Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD\n    }\n  }\n\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n\ncomponentDidMount(){\n  this.hideUsernameInput()\n}\ncomponentDidUpdate(){\n  this.hideUsernameInput()\n}\n\n\n  // <!-- TODO: Add SDKs for Firebase products that you want to use\n  //      https://firebase.google.com/docs/web/setup#available-libraries -->\n\n  updateUsername(ev){\n    let usernameInput = document.getElementById('updateUsernameInput')\n    \n\n    if(usernameInput.style.display === \"none\"){\n      usernameInput.style.display = \"block\"\n\n    }else{\n\n      let re = /\\W/g  // match non word characters ^[A-Za-z0-9]\n    \n      if(usernameInput.value.length > 12){\n        alert(usernameMaxLengthErrMsg)\n        return\n      } \n      if(re.exec(usernameInput.value) !== null ){\n        alert(usernameErrMsg)\n        return\n      }\n      //update \n      if(usernameInput.value.length <= 0){ \n        this.hideUsernameInput()     \n        return \n      }\n\n      db.ref(`users/${this.state.user.uid}/`)\n      .update({\n        \"username\": usernameInput.value\n      })\n      .then(() => {\n       this.hideUsernameInput()\n      })\n      .catch(err => { console.log(err) })\n    }\n  }\n\n  onKeyUp(data){\n    if((data.keyCode || data.which) == 13){\n        this.updateUsername()\n    }\n  }\n\n  hideUsernameInput(){\n    try{\n      let usernameInput = document.getElementById('updateUsernameInput')\n      usernameInput.value = \"\"\n      usernameInput.style.display = \"none\"\n    }catch{return}\n  }\n\n  render () {\n    \n    return (\n    <Grid container id=\"usernamePanel\" >\n    {\n      !this.state.userMD\n      ? \n        <h1> Loading </h1>\n      :\n        <React.Fragment>\n          <Grid item xs={12} >\n            <Typography gutterBottom variant=\"h4\">\n              Username\n            </Typography>\n            <Typography gutterBottom variant=\"h5\">\n              {this.state.userMD.username}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} >\n            <Button  \n                variant=\"outlined\" \n                color=\"primary\" \n                onClick={this.updateUsername.bind(this)}\n            >\n              <Typography>\n                  Update Username\n              </Typography>\n            </Button>\n          </Grid>\n          <Grid item xs={12} >\n            <TextField\n              id=\"updateUsernameInput\"\n              type=\"text\"\n              style={{ margin: 8}}\n              pattern=\"[A-Za-z]{12}\"\n              inputProps={{\n                title: \"Letters only, max length 12\",\n                placeholder: \"New username\"\n              }}\n              onKeyUp={this.onKeyUp.bind(this) }\n              margin=\"normal\"\n              color=\"primary\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />    \n          </Grid>\n        </React.Fragment>\n    }\n    </Grid>\n    );\n  }\n}\n\n\n\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import firebase from \"../context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/database\"; \n\n\nimport React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom';\n\nimport { Grid, Paper, Button, Typography, Collapse } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nimport Login from \"../comps/login\"\nimport OwnerBox from \"../comps/ownerBox\"\n\n\nimport UsernamePanel from \"../comps/usernamePanel\"\nimport history from \"../history\"\n\n\n\nimport postData from \"../utils/api\"\nimport \"../styles.css\"\n\n\n\nvar db = firebase.database();\n\n\nexport class PageContent extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD\n    }\n    console.log(props)\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n  \n  sendVerificationEmail(){\n    this.state.user.sendEmailVerification()\n    .then( () => {\n        this.setState({emailAlertOpen: true})\n    })\n    .catch( err => {console.log(err)})\n  }\n\n  render(){\n    return (\n      <Grid container align=\"center\">\n      <Grid item xs={12}>\n        <Collapse in={this.state.emailAlertOpen}>\n          <Alert onClose={() => {this.setState({emailAlertOpen: false})}}>\n            Email sent!\n          </Alert>\n        </Collapse>\n      </Grid>\n      <Grid item xs={12}>\n          <Paper elevation={2} >\n          </Paper>\n          {\n          !this.state.user.emailVerified\n          ?\n          \n            <Paper elevation={2}>\n              <Button variant=\"outline\" onClick={this.sendVerificationEmail.bind(this)} >\n               <Typography  variant=\"h5\" component=\"h3\">\n                  Send Verification Email\n                </Typography>\n              </Button>\n            </Paper>\n          :\n            <React.Fragment></React.Fragment>\n          }\n\n\n          <Paper elevation={2}>\n            <OwnerBox user={this.state.user}\n              userMD={this.state.userMD}\n            />\n          </Paper>\n      </Grid>\n\n\n\n\n      <Grid item xs={12}>\n        <Grid item xs={12} className=\"compBorderOutline\">\n          <Paper elevation={2}>\n            <Button variant=\"outlined\" color=\"secondary\"\n                      onClick={this.props.onLogout}>\n                  <Typography variant=\"h6\" component=\"h6\">\n                    Logout\n                  </Typography>\n            </Button>\n          </Paper>\n          \n        </Grid>\n      </Grid>\n    </Grid>\n\n    )\n  }\n}\n\n\n\nexport default class ProfilePage extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      user: props.user,\n      userMD: props.userMD\n    }  \n  }\n\n \n  handleLogout(){\n    firebase.auth().signOut().then(() => {\n      alert('Signed Out');\n      this.setState({user: null})\n    }, (error) => {\n      console.error('Sign Out Error', error )\n    });\n  }\n\n  /*\n    login.js has the form and does the login, calls this with the user obj\n  */\n  handleLogIn(user){\n      this.setState({user: user} )\n  }\n\n  componentWillReceiveProps(newProps){\n    this.setState({...newProps})\n  }\n\n\n  render () {\n    \n    return (\n    \t<Grid item xs={12} id=\"profilepage\">\n        {\n          this.state.user !== null\n          ? <PageContent \n                onLogout={this.handleLogout.bind(this)} \n                user= {this.state.user}\n                userMD={this.state.userMD}\n            />\n          : <Login \n            onLogin={this.handleLogIn.bind(this)} />\n        }\n  \t\t</Grid>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\n\nimport { AppBar, Toolbar, IconButton, Button, Typography} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withTheme } from '@material-ui/core/styles';\n\n\nclass Header extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<AppBar position=\"static\" \n\t\t\t\t\tstyle={{background:this.props.theme.palette.background.toolbar}}>\n\t\t\t<Toolbar disableGutters={false}>\n\t\t\t    <Typography gutterBottom variant=\"h3\" style={{\"margin\": \"0 auto\"}}>\n\t\t            WodTrackrr\n\t\t          </Typography>\n\t\t        </Toolbar>\n\t\t\t</AppBar>\n\t\t)\n\t}\n}\n\n\nexport default Header = withTheme(Header);","let apptheme = {\n   \"palette\":{\n      \"common\":{\n         \"black\":\"#000\",\n         \"white\":\"#fff\"\n      },\n      \"background\":{\n         \"paper\":\"#2e3134\",\n         \"toolbar\": \"#0d0e0e\",\n         \"tableHeader\": \"#1b1d1e\",\n         \"default\":\"rgba(48, 48, 48, 1)\"\n      },\n      \"primary\":{\n         \"main\":\"#03ceec\",\n         \"mainGrad\": 'linear-gradient(90deg,#0890fd,#01d3fe)',\n         \"contrastText\":\"rgba(255, 255, 255, 1)\"\n      },\n      \"secondary\":{\n         \"light\":\"#6C30FF\",\n         \"main\":\"#6C30FF\",\n         \"dark\":\"#6C30FF\",\n         \"contrastText\":\"#fff\"\n      },\n      \"error\":{\n         \"light\":\"#ea4331\",\n         \"main\":\"#c43627\",\n         \"dark\":\"#2d0d0b\",\n         \"contrastText\":\"rgba(255, 255, 255, 1)\"\n      },\n      \"text\":{\n         \"primary\":\"#ffffff\",\n         \"secondary\":\"#e0dfdf\",\n         \"disabled\":\"#bdbdbd\",\n         \"hint\":\"#afafaf\"\n      }\n   },\n   \n};\n\nexport default apptheme = apptheme;","import firebase, { FirebaseAuthContext } from \"./context/firebaseContext\"\nimport \"firebase/auth\";\nimport \"firebase/storage\"; \nimport \"firebase/database\"; \n\n\nimport React from \"react\";\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\n\n\nimport { Paper, Button, BottomNavigation, BottomNavigationAction ,Grid, Container} from '@material-ui/core';\n\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PanoramaIcon from '@material-ui/icons/Panorama';\n\nimport \"./styles.css\";\n\n\nimport BoxSearch from \"./pages/boxSearch\"\nimport Profile from \"./pages/profile\"\nimport Header from \"./comps/header\"\n\nimport postData from \"./utils/api\"\n\nimport history from \"./history\"\n\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport pink from '@material-ui/core/colors/pink';\nimport teal from '@material-ui/core/colors/teal';\n\nimport apptheme from \"./css/apptheme\"\n\nvar db = firebase.database();\n\n// Needs to move to its own file\nlet theme = createMuiTheme(apptheme);\ntheme = responsiveFontSizes(theme)\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props)\n  \n    this.state={\n      btmnav: 0,\n      user: firebase.auth().currentUser,\n      userMD: false\n    }\n    \n\n\n\n    this.firebaseAuthListener = firebase.auth()\n    .onAuthStateChanged(user => {\n      if(user){\n        console.log(\"Firebase user listener\")\n        this.setState({ user: user })\n        this.userMDListener = db.ref('users/' + user.uid)\n          .on('value', metadata => {\n             if(metadata.val()){\n              console.log(\"Metadata change\")\n              console.log(metadata.val())\n              this.setState({\n                userMD: metadata.val()\n              })\n             }\n          })\n      }\n    })\n  }\n\n  componentWillUnmount(){\n    if(this.firebaseAuthListener !== undefined)\n      this.firebaseAuthListener && this.firebaseAuthListener()\n    if(this.userMDListener !== null)\n      this.userMDListener && this.userMDListener()\n  }\n\n\n          // <Route path=\"/subscribe\"  >\n          //   <SubscribePage \n              // user={this.state.user}\n              // userMetadata={this.state.userMetadata}\n          //   />\n\n  render(){\n    return(\n    <FirebaseAuthContext.Provider>\n    <HashRouter history={history} >\n   \n    <ThemeProvider theme={theme}>\n      \n      <Grid container>\n\n        <Grid item xs={12} id=\"page-header\">\n          <Header className=\"header\" />\n        </Grid>\n        <Grid item xs={11} id=\"page-container\" className=\"page-content\">\n        <Switch>\n          <Route exact path=\"/boxSearch\">\n            <BoxSearch user={this.state.user}\n              userMD={this.state.userMD} />\n          </Route>     \n          <Route exact path=\"/profile\">\n            <Profile user={this.state.user}\n              userMD={this.state.userMD} />\n          </Route>      \n        </Switch>\n        </Grid>\n\n        <Grid item xs={12} className=\"footer\">\n          <BottomNavigation className=\"footer\"\n            value = {this.state.btmnav}\n            onChange = {(event, newValue) => {\n                this.setState({btmnav: newValue})\n              }}\n              style={{background: theme.palette.background.toolbar}}\n            showLabels>\n            <BottomNavigationAction label=\"Search\" component={Link} to=\"/boxSearch\" icon={<PersonIcon />}  />\n            <BottomNavigationAction label=\"Profile\" component={Link} to=\"/profile\" icon={<PersonIcon />}  />\n          </BottomNavigation>\n        </Grid>\n    </Grid>\n    \n       </ThemeProvider>\n\n      </HashRouter>\n      </FirebaseAuthContext.Provider>\n  \n    );\n  }\n}\n\nApp.contextType = FirebaseAuthContext;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\n\n\n\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}